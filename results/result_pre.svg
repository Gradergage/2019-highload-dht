<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (413 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=34664] (413 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="926.0">[NIO Selector #0 tid=34664]</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.24%)</title><rect x="10.0" y="899.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.24%)</title><rect x="10.0" y="883.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.24%)</title><rect x="10.0" y="867.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.24%)</title><rect x="10.0" y="851.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.24%)</title><rect x="10.0" y="835.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.24%)</title><rect x="12.9" y="899.0" width="2.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.9" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (411 samples, 99.52%)</title><rect x="15.7" y="899.0" width="1174.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.7" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (65 samples, 15.74%)</title><rect x="18.6" y="883.0" width="185.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.6" y="894.0">one/nio/net/NativeSelect..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (63 samples, 15.25%)</title><rect x="24.3" y="867.0" width="180.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.3" y="878.0">one/nio/net/NativeSelec..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.73%)</title><rect x="30.0" y="851.0" width="8.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="33.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 13.08%)</title><rect x="38.6" y="851.0" width="154.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="41.6" y="862.0">[unknown]</text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.73%)</title><rect x="38.6" y="835.0" width="8.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="41.6" y="846.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.73%)</title><rect x="38.6" y="819.0" width="8.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="41.6" y="830.0"></text>
</g>
<g>
<title>epoll_wait (51 samples, 12.35%)</title><rect x="47.1" y="835.0" width="145.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="50.1" y="846.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 10.17%)</title><rect x="72.9" y="819.0" width="120.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.9" y="830.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (42 samples, 10.17%)</title><rect x="72.9" y="803.0" width="120.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="75.9" y="814.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (40 samples, 9.69%)</title><rect x="78.6" y="787.0" width="114.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="81.6" y="798.0">__x64_sys_epol..</text>
</g>
<g>
<title>do_epoll_wait (40 samples, 9.69%)</title><rect x="78.6" y="771.0" width="114.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="81.6" y="782.0">do_epoll_wait</text>
</g>
<g>
<title>__fdget (2 samples, 0.48%)</title><rect x="78.6" y="755.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="81.6" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.48%)</title><rect x="78.6" y="739.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="81.6" y="750.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.48%)</title><rect x="78.6" y="723.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="81.6" y="734.0"></text>
</g>
<g>
<title>ep_poll (36 samples, 8.72%)</title><rect x="84.3" y="755.0" width="102.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="87.3" y="766.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (13 samples, 3.15%)</title><rect x="90.0" y="739.0" width="37.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="93.0" y="750.0">ep_..</text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 1.94%)</title><rect x="101.4" y="723.0" width="22.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="104.4" y="734.0">e..</text>
</g>
<g>
<title>ep_item_poll.isra.16 (6 samples, 1.45%)</title><rect x="104.3" y="707.0" width="17.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="107.3" y="718.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 1.21%)</title><rect x="107.1" y="691.0" width="14.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="110.1" y="702.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.73%)</title><rect x="112.9" y="675.0" width="8.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="115.9" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.24%)</title><rect x="118.6" y="659.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="121.6" y="670.0"></text>
</g>
<g>
<title>hv_stimer0_callback_vector (1 samples, 0.24%)</title><rect x="118.6" y="643.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="121.6" y="654.0"></text>
</g>
<g>
<title>hv_stimer0_vector_handler (1 samples, 0.24%)</title><rect x="118.6" y="627.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="121.6" y="638.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.24%)</title><rect x="118.6" y="611.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="121.6" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.24%)</title><rect x="118.6" y="595.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="121.6" y="606.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.24%)</title><rect x="118.6" y="579.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="121.6" y="590.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.24%)</title><rect x="121.4" y="707.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="124.4" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.24%)</title><rect x="124.3" y="723.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.3" y="734.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.24%)</title><rect x="124.3" y="707.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="127.3" y="718.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.24%)</title><rect x="124.3" y="691.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="127.3" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (21 samples, 5.08%)</title><rect x="127.1" y="739.0" width="60.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="130.1" y="750.0">schedu..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (21 samples, 5.08%)</title><rect x="127.1" y="723.0" width="60.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="130.1" y="734.0">schedu..</text>
</g>
<g>
<title>schedule (21 samples, 5.08%)</title><rect x="127.1" y="707.0" width="60.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="130.1" y="718.0">schedule</text>
</g>
<g>
<title>__schedule (21 samples, 5.08%)</title><rect x="127.1" y="691.0" width="60.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="130.1" y="702.0">__sche..</text>
</g>
<g>
<title>finish_task_switch (21 samples, 5.08%)</title><rect x="127.1" y="675.0" width="60.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="130.1" y="686.0">finish..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.24%)</title><rect x="187.1" y="755.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="190.1" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.24%)</title><rect x="190.0" y="755.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="193.0" y="766.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.97%)</title><rect x="192.9" y="851.0" width="11.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="195.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (345 samples, 83.54%)</title><rect x="204.3" y="883.0" width="985.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.3" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (345 samples, 83.54%)</title><rect x="204.3" y="867.0" width="985.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.3" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (298 samples, 72.15%)</title><rect x="204.3" y="851.0" width="851.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.3" y="862.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (295 samples, 71.43%)</title><rect x="204.3" y="835.0" width="842.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.3" y="846.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>java/util/LinkedList.addLast (8 samples, 1.94%)</title><rect x="210.0" y="819.0" width="22.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.0" y="830.0">j..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (285 samples, 69.01%)</title><rect x="232.9" y="819.0" width="814.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.9" y="830.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (279 samples, 67.55%)</title><rect x="232.9" y="803.0" width="797.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.9" y="814.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (177 samples, 42.86%)</title><rect x="232.9" y="787.0" width="505.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="235.9" y="798.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (177 samples, 42.86%)</title><rect x="232.9" y="771.0" width="505.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.9" y="782.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.73%)</title><rect x="241.4" y="755.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.48%)</title><rect x="244.3" y="739.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.48%)</title><rect x="244.3" y="723.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.48%)</title><rect x="244.3" y="707.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.3" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="247.1" y="691.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="250.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (171 samples, 41.40%)</title><rect x="250.0" y="755.0" width="488.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="253.0" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (171 samples, 41.40%)</title><rect x="250.0" y="739.0" width="488.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.0" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (170 samples, 41.16%)</title><rect x="252.9" y="723.0" width="485.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.9" y="734.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (170 samples, 41.16%)</title><rect x="252.9" y="707.0" width="485.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.9" y="718.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.24%)</title><rect x="255.7" y="691.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="258.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.97%)</title><rect x="258.6" y="691.0" width="11.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="261.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.97%)</title><rect x="258.6" y="675.0" width="11.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="261.6" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.48%)</title><rect x="258.6" y="659.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="261.6" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.24%)</title><rect x="261.4" y="643.0" width="2.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="264.4" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.24%)</title><rect x="261.4" y="627.0" width="2.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="264.4" y="638.0"></text>
</g>
<g>
<title>__send (2 samples, 0.48%)</title><rect x="264.3" y="659.0" width="5.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="267.3" y="670.0"></text>
</g>
<g>
<title>__send (164 samples, 39.71%)</title><rect x="270.0" y="691.0" width="468.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="273.0" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (159 samples, 38.50%)</title><rect x="284.3" y="675.0" width="454.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="287.3" y="686.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.24%)</title><rect x="284.3" y="659.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="287.3" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (158 samples, 38.26%)</title><rect x="287.1" y="659.0" width="451.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="290.1" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (157 samples, 38.01%)</title><rect x="287.1" y="643.0" width="448.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.1" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (157 samples, 38.01%)</title><rect x="287.1" y="627.0" width="448.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="290.1" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (155 samples, 37.53%)</title><rect x="290.0" y="611.0" width="442.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="293.0" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (155 samples, 37.53%)</title><rect x="290.0" y="595.0" width="442.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="293.0" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (154 samples, 37.29%)</title><rect x="292.9" y="579.0" width="440.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="295.9" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.24%)</title><rect x="292.9" y="563.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="295.9" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.24%)</title><rect x="292.9" y="547.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="295.9" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.24%)</title><rect x="295.7" y="563.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="298.7" y="574.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.24%)</title><rect x="295.7" y="547.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="298.7" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (151 samples, 36.56%)</title><rect x="298.6" y="563.0" width="431.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.6" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.24%)</title><rect x="304.3" y="547.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="307.3" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.24%)</title><rect x="307.1" y="547.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="310.1" y="558.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.24%)</title><rect x="310.0" y="547.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="313.0" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 1.94%)</title><rect x="312.9" y="547.0" width="22.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="315.9" y="558.0">s..</text>
</g>
<g>
<title>__alloc_skb (8 samples, 1.94%)</title><rect x="312.9" y="531.0" width="22.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="315.9" y="542.0">_..</text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (3 samples, 0.73%)</title><rect x="315.7" y="515.0" width="8.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="318.7" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.48%)</title><rect x="315.7" y="499.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="318.7" y="510.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.24%)</title><rect x="321.4" y="499.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="324.4" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.97%)</title><rect x="324.3" y="515.0" width="11.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="327.3" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.24%)</title><rect x="335.7" y="547.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="338.7" y="558.0"></text>
</g>
<g>
<title>tcp_push (135 samples, 32.69%)</title><rect x="338.6" y="547.0" width="385.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="341.6" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (133 samples, 32.20%)</title><rect x="338.6" y="531.0" width="380.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="341.6" y="542.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>ktime_get (1 samples, 0.24%)</title><rect x="338.6" y="515.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="341.6" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.24%)</title><rect x="341.4" y="515.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="344.4" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (131 samples, 31.72%)</title><rect x="344.3" y="515.0" width="374.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="347.3" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.24%)</title><rect x="350.0" y="499.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="353.0" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (123 samples, 29.78%)</title><rect x="352.9" y="499.0" width="351.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="355.9" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.24%)</title><rect x="358.6" y="483.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="361.6" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (119 samples, 28.81%)</title><rect x="361.4" y="483.0" width="340.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="364.4" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (117 samples, 28.33%)</title><rect x="364.3" y="467.0" width="334.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="367.3" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (115 samples, 27.85%)</title><rect x="370.0" y="451.0" width="328.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="373.0" y="462.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (7 samples, 1.69%)</title><rect x="370.0" y="435.0" width="20.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="373.0" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.24%)</title><rect x="370.0" y="419.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="373.0" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 1.45%)</title><rect x="372.9" y="419.0" width="17.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="375.9" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (6 samples, 1.45%)</title><rect x="372.9" y="403.0" width="17.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="375.9" y="414.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (2 samples, 0.48%)</title><rect x="372.9" y="387.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="375.9" y="398.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.24%)</title><rect x="378.6" y="387.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.6" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 0.73%)</title><rect x="381.4" y="387.0" width="8.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="384.4" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (1 samples, 0.24%)</title><rect x="381.4" y="371.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="384.4" y="382.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (2 samples, 0.48%)</title><rect x="384.3" y="371.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.3" y="382.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (1 samples, 0.24%)</title><rect x="387.1" y="355.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="390.1" y="366.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.48%)</title><rect x="390.0" y="435.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="393.0" y="446.0"></text>
</g>
<g>
<title>ip_output (106 samples, 25.67%)</title><rect x="395.7" y="435.0" width="302.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="398.7" y="446.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.24%)</title><rect x="395.7" y="419.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="398.7" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (105 samples, 25.42%)</title><rect x="398.6" y="419.0" width="300.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.6" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.73%)</title><rect x="404.3" y="403.0" width="8.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="407.3" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (100 samples, 24.21%)</title><rect x="412.9" y="403.0" width="285.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="415.9" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (94 samples, 22.76%)</title><rect x="415.7" y="387.0" width="268.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="418.7" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (94 samples, 22.76%)</title><rect x="415.7" y="371.0" width="268.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="418.7" y="382.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (94 samples, 22.76%)</title><rect x="415.7" y="355.0" width="268.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="418.7" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (94 samples, 22.76%)</title><rect x="415.7" y="339.0" width="268.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="418.7" y="350.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (92 samples, 22.28%)</title><rect x="421.4" y="323.0" width="262.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="424.4" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (91 samples, 22.03%)</title><rect x="424.3" y="307.0" width="260.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="427.3" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (91 samples, 22.03%)</title><rect x="424.3" y="291.0" width="260.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="427.3" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (89 samples, 21.55%)</title><rect x="427.1" y="275.0" width="254.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="430.1" y="286.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.73%)</title><rect x="427.1" y="259.0" width="8.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="430.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv (86 samples, 20.82%)</title><rect x="435.7" y="259.0" width="245.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="438.7" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (86 samples, 20.82%)</title><rect x="435.7" y="243.0" width="245.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="438.7" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (86 samples, 20.82%)</title><rect x="435.7" y="227.0" width="245.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="438.7" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (86 samples, 20.82%)</title><rect x="435.7" y="211.0" width="245.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="438.7" y="222.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (86 samples, 20.82%)</title><rect x="435.7" y="195.0" width="245.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="438.7" y="206.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.24%)</title><rect x="438.6" y="179.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (84 samples, 20.34%)</title><rect x="441.4" y="179.0" width="240.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="444.4" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.97%)</title><rect x="452.9" y="163.0" width="11.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.9" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.24%)</title><rect x="461.4" y="147.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="464.4" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.73%)</title><rect x="464.3" y="163.0" width="8.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="467.3" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.24%)</title><rect x="464.3" y="147.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="467.3" y="158.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.48%)</title><rect x="467.1" y="147.0" width="5.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="470.1" y="158.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.24%)</title><rect x="472.9" y="163.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="475.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (72 samples, 17.43%)</title><rect x="475.7" y="163.0" width="205.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="478.7" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (72 samples, 17.43%)</title><rect x="475.7" y="147.0" width="205.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="478.7" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.48%)</title><rect x="475.7" y="131.0" width="5.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="478.7" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.24%)</title><rect x="475.7" y="115.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.7" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.24%)</title><rect x="478.6" y="115.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.6" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.24%)</title><rect x="478.6" y="99.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="481.6" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="478.6" y="83.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="481.6" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.24%)</title><rect x="481.4" y="131.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="484.4" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.24%)</title><rect x="484.3" y="131.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="487.3" y="142.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 2.42%)</title><rect x="487.1" y="131.0" width="28.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="490.1" y="142.0">tc..</text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 1.94%)</title><rect x="492.9" y="115.0" width="22.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="495.9" y="126.0">t..</text>
</g>
<g>
<title>__kfree_skb (6 samples, 1.45%)</title><rect x="498.6" y="99.0" width="17.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="501.6" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.24%)</title><rect x="498.6" y="83.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="501.6" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.24%)</title><rect x="498.6" y="67.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="501.6" y="78.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 1.21%)</title><rect x="501.4" y="83.0" width="14.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="504.4" y="94.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 1.21%)</title><rect x="501.4" y="67.0" width="14.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="504.4" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.48%)</title><rect x="510.0" y="51.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="513.0" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.48%)</title><rect x="510.0" y="35.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="513.0" y="46.0"></text>
</g>
<g>
<title>tcp_data_queue (57 samples, 13.80%)</title><rect x="515.7" y="131.0" width="162.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="518.7" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (55 samples, 13.32%)</title><rect x="518.6" y="115.0" width="157.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="521.6" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (54 samples, 13.08%)</title><rect x="521.4" y="99.0" width="154.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="524.4" y="110.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 13.08%)</title><rect x="521.4" y="83.0" width="154.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="524.4" y="94.0">__wake_up_common_lock</text>
</g>
<g>
<title>__lock_text_start (54 samples, 13.08%)</title><rect x="521.4" y="67.0" width="154.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="524.4" y="78.0">__lock_text_start</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.24%)</title><rect x="675.7" y="115.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="678.7" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.24%)</title><rect x="678.6" y="131.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="681.6" y="142.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="681.4" y="275.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="684.4" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 1.21%)</title><rect x="684.3" y="387.0" width="14.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="687.3" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 1.21%)</title><rect x="684.3" y="371.0" width="14.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="687.3" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.48%)</title><rect x="687.1" y="355.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="690.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.48%)</title><rect x="687.1" y="339.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="690.1" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.24%)</title><rect x="687.1" y="323.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="690.1" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.24%)</title><rect x="690.0" y="323.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="693.0" y="334.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.24%)</title><rect x="690.0" y="307.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="693.0" y="318.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.24%)</title><rect x="692.9" y="355.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="695.9" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.24%)</title><rect x="695.7" y="355.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="698.7" y="366.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.24%)</title><rect x="698.6" y="467.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="701.6" y="478.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.24%)</title><rect x="701.4" y="483.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="704.4" y="494.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.24%)</title><rect x="704.3" y="499.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.3" y="510.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.48%)</title><rect x="707.1" y="499.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="710.1" y="510.0"></text>
</g>
<g>
<title>read_hv_clock_tsc (2 samples, 0.48%)</title><rect x="707.1" y="483.0" width="5.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="710.1" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.24%)</title><rect x="712.9" y="499.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="715.9" y="510.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.24%)</title><rect x="712.9" y="483.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="715.9" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.24%)</title><rect x="715.7" y="499.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="718.7" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.48%)</title><rect x="718.6" y="531.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="721.6" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.24%)</title><rect x="724.3" y="547.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="727.3" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.24%)</title><rect x="727.1" y="547.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="730.1" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.24%)</title><rect x="730.0" y="563.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="733.0" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="732.9" y="611.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="735.9" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.24%)</title><rect x="732.9" y="595.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.9" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.24%)</title><rect x="732.9" y="579.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.9" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.24%)</title><rect x="732.9" y="563.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="735.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="735.7" y="643.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="738.7" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.24%)</title><rect x="735.7" y="627.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="738.7" y="638.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.24%)</title><rect x="735.7" y="611.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="738.7" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="735.7" y="595.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="738.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.48%)</title><rect x="738.6" y="787.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.6" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="738.6" y="771.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="741.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.24%)</title><rect x="741.4" y="771.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.entity (100 samples, 24.21%)</title><rect x="744.3" y="787.0" width="285.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.3" y="798.0">ru/mail/polis/service/CustomServer.ent..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 1.45%)</title><rect x="744.3" y="771.0" width="17.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 1.45%)</title><rect x="744.3" y="755.0" width="17.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 1.45%)</title><rect x="744.3" y="739.0" width="17.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.3" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 1.45%)</title><rect x="744.3" y="723.0" width="17.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.3" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.48%)</title><rect x="750.0" y="707.0" width="5.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="753.0" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.24%)</title><rect x="752.9" y="691.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="755.9" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.24%)</title><rect x="752.9" y="675.0" width="2.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="755.9" y="686.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.48%)</title><rect x="755.7" y="707.0" width="5.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="758.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImplementation.get (94 samples, 22.76%)</title><rect x="761.4" y="771.0" width="268.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.4" y="782.0">ru/mail/polis/dao/DAOImplementation...</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (50 samples, 12.11%)</title><rect x="761.4" y="755.0" width="142.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.4" y="766.0">java/util/NoSuchEl..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (50 samples, 12.11%)</title><rect x="761.4" y="739.0" width="142.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.4" y="750.0">java/lang/RuntimeE..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (50 samples, 12.11%)</title><rect x="761.4" y="723.0" width="142.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.4" y="734.0">java/lang/Exceptio..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (50 samples, 12.11%)</title><rect x="761.4" y="707.0" width="142.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.4" y="718.0">java/lang/Throwabl..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (50 samples, 12.11%)</title><rect x="761.4" y="691.0" width="142.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.4" y="702.0">java/lang/Throwabl..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (50 samples, 12.11%)</title><rect x="761.4" y="675.0" width="142.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.4" y="686.0">java/lang/Throwabl..</text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (48 samples, 11.62%)</title><rect x="767.1" y="659.0" width="137.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="770.1" y="670.0">Java_java_lang_Th..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.24%)</title><rect x="767.1" y="643.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="770.1" y="654.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (47 samples, 11.38%)</title><rect x="770.0" y="643.0" width="134.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="773.0" y="654.0">JVM_FillInStackTr..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (47 samples, 11.38%)</title><rect x="770.0" y="627.0" width="134.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="773.0" y="638.0">/usr/lib/jvm/java..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (44 samples, 10.65%)</title><rect x="775.7" y="611.0" width="125.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="778.7" y="622.0">/usr/lib/jvm/ja..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (28 samples, 6.78%)</title><rect x="821.4" y="595.0" width="80.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="824.4" y="606.0">/usr/lib/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (19 samples, 4.60%)</title><rect x="847.1" y="579.0" width="54.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="850.1" y="590.0">/usr/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (11 samples, 2.66%)</title><rect x="870.0" y="563.0" width="31.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="873.0" y="574.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 1.45%)</title><rect x="884.3" y="547.0" width="17.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="887.3" y="558.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.48%)</title><rect x="895.7" y="531.0" width="5.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="898.7" y="542.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.24%)</title><rect x="898.6" y="515.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="901.6" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.24%)</title><rect x="901.4" y="611.0" width="2.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="904.4" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (44 samples, 10.65%)</title><rect x="904.3" y="755.0" width="125.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.3" y="766.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (43 samples, 10.41%)</title><rect x="907.1" y="739.0" width="122.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="910.1" y="750.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (39 samples, 9.44%)</title><rect x="907.1" y="723.0" width="111.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="910.1" y="734.0">Java_org_rock..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.24%)</title><rect x="907.1" y="707.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="910.1" y="718.0"></text>
</g>
<g>
<title>free (4 samples, 0.97%)</title><rect x="910.0" y="707.0" width="11.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="913.0" y="718.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.24%)</title><rect x="921.4" y="707.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="924.4" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (33 samples, 7.99%)</title><rect x="924.3" y="707.0" width="94.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="927.3" y="718.0">rocksdb_get..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (31 samples, 7.51%)</title><rect x="930.0" y="691.0" width="88.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="933.0" y="702.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (31 samples, 7.51%)</title><rect x="930.0" y="675.0" width="88.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="933.0" y="686.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (29 samples, 7.02%)</title><rect x="932.9" y="659.0" width="82.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="935.9" y="670.0">rocksdb::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.97%)</title><rect x="932.9" y="643.0" width="11.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="935.9" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.24%)</title><rect x="944.3" y="643.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="947.3" y="654.0"></text>
</g>
<g>
<title>_init (1 samples, 0.24%)</title><rect x="947.1" y="643.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="950.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.24%)</title><rect x="950.0" y="643.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="953.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (20 samples, 4.84%)</title><rect x="952.9" y="643.0" width="57.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="955.9" y="654.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni4239100179666494052.so (2 samples, 0.48%)</title><rect x="961.4" y="627.0" width="5.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="964.4" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.24%)</title><rect x="967.1" y="627.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="970.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.24%)</title><rect x="970.0" y="627.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="973.0" y="638.0"></text>
</g>
<g>
<title>_init (1 samples, 0.24%)</title><rect x="972.9" y="627.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="975.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.48%)</title><rect x="975.7" y="627.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="978.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.24%)</title><rect x="981.4" y="627.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="984.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.24%)</title><rect x="981.4" y="611.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="984.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (1 samples, 0.24%)</title><rect x="984.3" y="627.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="987.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (3 samples, 0.73%)</title><rect x="987.1" y="627.0" width="8.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="990.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.24%)</title><rect x="995.7" y="627.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="998.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.24%)</title><rect x="998.6" y="627.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1001.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (3 samples, 0.73%)</title><rect x="1001.4" y="627.0" width="8.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1004.4" y="638.0"></text>
</g>
<g>
<title>_init (1 samples, 0.24%)</title><rect x="1004.3" y="611.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1007.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.24%)</title><rect x="1007.1" y="611.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1010.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.24%)</title><rect x="1010.0" y="643.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1013.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (1 samples, 0.24%)</title><rect x="1012.9" y="643.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1015.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.24%)</title><rect x="1015.7" y="659.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1018.7" y="670.0"></text>
</g>
<g>
<title>_init (1 samples, 0.24%)</title><rect x="1018.6" y="723.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1021.6" y="734.0"></text>
</g>
<g>
<title>free (1 samples, 0.24%)</title><rect x="1021.4" y="723.0" width="2.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1024.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.24%)</title><rect x="1024.3" y="723.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1027.3" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.24%)</title><rect x="1027.1" y="723.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1030.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 1.45%)</title><rect x="1030.0" y="803.0" width="17.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 1.45%)</title><rect x="1030.0" y="787.0" width="17.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.48%)</title><rect x="1030.0" y="771.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.97%)</title><rect x="1035.7" y="771.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.97%)</title><rect x="1035.7" y="755.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.97%)</title><rect x="1035.7" y="739.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1038.7" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.48%)</title><rect x="1041.4" y="723.0" width="5.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1044.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.48%)</title><rect x="1047.1" y="835.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1050.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.24%)</title><rect x="1050.0" y="819.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1053.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="1052.9" y="835.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1055.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="1052.9" y="819.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.24%)</title><rect x="1052.9" y="803.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.24%)</title><rect x="1052.9" y="787.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.9" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (47 samples, 11.38%)</title><rect x="1055.7" y="851.0" width="134.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.7" y="862.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (45 samples, 10.90%)</title><rect x="1061.4" y="835.0" width="128.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.4" y="846.0">one/nio/net/Nati..</text>
</g>
<g>
<title>[unknown] (8 samples, 1.94%)</title><rect x="1064.3" y="819.0" width="22.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1067.3" y="830.0">[..</text>
</g>
<g>
<title>[unknown] (8 samples, 1.94%)</title><rect x="1064.3" y="803.0" width="22.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1067.3" y="814.0">[..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.48%)</title><rect x="1064.3" y="787.0" width="5.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1067.3" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 1.45%)</title><rect x="1070.0" y="787.0" width="17.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1073.0" y="798.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.24%)</title><rect x="1072.9" y="771.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1075.9" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.97%)</title><rect x="1075.7" y="771.0" width="11.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1078.7" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.73%)</title><rect x="1078.6" y="755.0" width="8.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1081.6" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.73%)</title><rect x="1078.6" y="739.0" width="8.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1081.6" y="750.0"></text>
</g>
<g>
<title>recv (36 samples, 8.72%)</title><rect x="1087.1" y="819.0" width="102.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1090.1" y="830.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 5.33%)</title><rect x="1127.1" y="803.0" width="62.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1130.1" y="814.0">entry_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.24%)</title><rect x="1127.1" y="787.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1130.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 5.08%)</title><rect x="1130.0" y="787.0" width="60.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1133.0" y="798.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_recvfrom (20 samples, 4.84%)</title><rect x="1132.9" y="771.0" width="57.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1135.9" y="782.0">__x64_..</text>
</g>
<g>
<title>__sys_recvfrom (20 samples, 4.84%)</title><rect x="1132.9" y="755.0" width="57.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1135.9" y="766.0">__sys_..</text>
</g>
<g>
<title>sock_recvmsg (17 samples, 4.12%)</title><rect x="1132.9" y="739.0" width="48.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1135.9" y="750.0">sock..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.24%)</title><rect x="1132.9" y="723.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1135.9" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (12 samples, 2.91%)</title><rect x="1135.7" y="723.0" width="34.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1138.7" y="734.0">in..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.24%)</title><rect x="1141.4" y="707.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1144.4" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 2.18%)</title><rect x="1144.3" y="707.0" width="25.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1147.3" y="718.0">t..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.24%)</title><rect x="1150.0" y="691.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1153.0" y="702.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.24%)</title><rect x="1150.0" y="675.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1153.0" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.24%)</title><rect x="1152.9" y="691.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1155.9" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.24%)</title><rect x="1152.9" y="675.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.9" y="686.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.24%)</title><rect x="1152.9" y="659.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1155.9" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.97%)</title><rect x="1155.7" y="691.0" width="11.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1158.7" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.97%)</title><rect x="1155.7" y="675.0" width="11.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1158.7" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.73%)</title><rect x="1158.6" y="659.0" width="8.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1161.6" y="670.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.48%)</title><rect x="1158.6" y="643.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1161.6" y="654.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.48%)</title><rect x="1158.6" y="627.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1161.6" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.24%)</title><rect x="1164.3" y="643.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1167.3" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.24%)</title><rect x="1164.3" y="627.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1167.3" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.24%)</title><rect x="1167.1" y="691.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1170.1" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.24%)</title><rect x="1167.1" y="675.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1170.1" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.97%)</title><rect x="1170.0" y="723.0" width="11.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.0" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.24%)</title><rect x="1170.0" y="707.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1173.0" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.73%)</title><rect x="1172.9" y="707.0" width="8.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1175.9" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.73%)</title><rect x="1172.9" y="691.0" width="8.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1175.9" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.73%)</title><rect x="1172.9" y="675.0" width="8.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1175.9" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.73%)</title><rect x="1181.4" y="739.0" width="8.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1184.4" y="750.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.73%)</title><rect x="1181.4" y="723.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1184.4" y="734.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.73%)</title><rect x="1181.4" y="707.0" width="8.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1184.4" y="718.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.48%)</title><rect x="1184.3" y="691.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1187.3" y="702.0"></text>
</g>
</g>
</svg>
