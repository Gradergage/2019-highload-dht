<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (193 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 1.04%)</title><rect x="10.0" y="867.0" width="12.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 1.04%)</title><rect x="10.0" y="851.0" width="12.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 1.04%)</title><rect x="10.0" y="835.0" width="12.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 1.04%)</title><rect x="10.0" y="819.0" width="12.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.run (135 samples, 69.95%)</title><rect x="22.2" y="867.0" width="825.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.2" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (135 samples, 69.95%)</title><rect x="22.2" y="851.0" width="825.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.2" y="862.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (135 samples, 69.95%)</title><rect x="22.2" y="835.0" width="825.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.2" y="846.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 15.54%)</title><rect x="22.2" y="819.0" width="183.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.2" y="830.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (30 samples, 15.54%)</title><rect x="22.2" y="803.0" width="183.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.2" y="814.0">java/util/concurrent/Syn..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (30 samples, 15.54%)</title><rect x="22.2" y="787.0" width="183.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.2" y="798.0">java/util/concurrent/Syn..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (30 samples, 15.54%)</title><rect x="22.2" y="771.0" width="183.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.2" y="782.0">java/util/concurrent/Syn..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (30 samples, 15.54%)</title><rect x="22.2" y="755.0" width="183.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.2" y="766.0">java/util/concurrent/loc..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (30 samples, 15.54%)</title><rect x="22.2" y="739.0" width="183.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.2" y="750.0">jdk/internal/misc/Unsafe..</text>
</g>
<g>
<title>Unsafe_Park (9 samples, 4.66%)</title><rect x="22.2" y="723.0" width="55.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="25.2" y="734.0">Unsaf..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.52%)</title><rect x="28.3" y="707.0" width="6.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="31.3" y="718.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.52%)</title><rect x="28.3" y="691.0" width="6.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="31.3" y="702.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 2.59%)</title><rect x="34.5" y="707.0" width="30.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="37.5" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 1.55%)</title><rect x="46.7" y="691.0" width="18.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="49.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 1.55%)</title><rect x="46.7" y="675.0" width="18.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="49.7" y="686.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 1.04%)</title><rect x="65.0" y="707.0" width="12.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="68.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.52%)</title><rect x="77.3" y="723.0" width="6.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="80.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Close() (1 samples, 0.52%)</title><rect x="77.3" y="707.0" width="6.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="80.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.52%)</title><rect x="77.3" y="691.0" width="6.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="80.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.52%)</title><rect x="77.3" y="675.0" width="6.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="80.3" y="686.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.52%)</title><rect x="77.3" y="659.0" width="6.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="80.3" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (18 samples, 9.33%)</title><rect x="83.4" y="723.0" width="110.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="86.4" y="734.0">__pthread_con..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 6.22%)</title><rect x="120.1" y="707.0" width="73.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="123.1" y="718.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (12 samples, 6.22%)</title><rect x="120.1" y="691.0" width="73.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="123.1" y="702.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 6.22%)</title><rect x="120.1" y="675.0" width="73.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="123.1" y="686.0">__x64_sy..</text>
</g>
<g>
<title>do_futex (12 samples, 6.22%)</title><rect x="120.1" y="659.0" width="73.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="123.1" y="670.0">do_futex</text>
</g>
<g>
<title>drop_futex_key_refs.isra.18 (1 samples, 0.52%)</title><rect x="120.1" y="643.0" width="6.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="123.1" y="654.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 5.70%)</title><rect x="126.2" y="643.0" width="67.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="129.2" y="654.0">futex_w..</text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 3.63%)</title><rect x="126.2" y="627.0" width="42.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="129.2" y="638.0">fute..</text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 1.04%)</title><rect x="126.2" y="611.0" width="12.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="129.2" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 1.04%)</title><rect x="126.2" y="595.0" width="12.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="129.2" y="606.0"></text>
</g>
<g>
<title>schedule (5 samples, 2.59%)</title><rect x="138.4" y="611.0" width="30.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.4" y="622.0">sc..</text>
</g>
<g>
<title>__schedule (5 samples, 2.59%)</title><rect x="138.4" y="595.0" width="30.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="141.4" y="606.0">__..</text>
</g>
<g>
<title>finish_task_switch (4 samples, 2.07%)</title><rect x="138.4" y="579.0" width="24.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="141.4" y="590.0">f..</text>
</g>
<g>
<title>hv_stimer0_callback_vector (1 samples, 0.52%)</title><rect x="156.7" y="563.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="159.7" y="574.0"></text>
</g>
<g>
<title>hv_stimer0_vector_handler (1 samples, 0.52%)</title><rect x="156.7" y="547.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="159.7" y="558.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.52%)</title><rect x="156.7" y="531.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="159.7" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.52%)</title><rect x="156.7" y="515.0" width="6.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="159.7" y="526.0"></text>
</g>
<g>
<title>hv_stimer0_callback_vector (1 samples, 0.52%)</title><rect x="162.8" y="579.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="165.8" y="590.0"></text>
</g>
<g>
<title>hv_stimer0_vector_handler (1 samples, 0.52%)</title><rect x="162.8" y="563.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="165.8" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.52%)</title><rect x="162.8" y="547.0" width="6.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="165.8" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.52%)</title><rect x="162.8" y="531.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="165.8" y="542.0"></text>
</g>
<g>
<title>hrtimer_cancel (4 samples, 2.07%)</title><rect x="169.0" y="627.0" width="24.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="172.0" y="638.0">h..</text>
</g>
<g>
<title>hrtimer_try_to_cancel (4 samples, 2.07%)</title><rect x="169.0" y="611.0" width="24.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="172.0" y="622.0">h..</text>
</g>
<g>
<title>__lock_text_start (4 samples, 2.07%)</title><rect x="169.0" y="595.0" width="24.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="172.0" y="606.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 1.04%)</title><rect x="193.4" y="723.0" width="12.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="196.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer$$Lambda$60/455987337.run (105 samples, 54.40%)</title><rect x="205.6" y="819.0" width="642.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.6" y="830.0">ru/mail/polis/service/CustomServer$$Lambda$60/455987337.run</text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.lambda$entity$0 (105 samples, 54.40%)</title><rect x="205.6" y="803.0" width="642.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.6" y="814.0">ru/mail/polis/service/CustomServer.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.handleEntityRequest (105 samples, 54.40%)</title><rect x="205.6" y="787.0" width="642.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.6" y="798.0">ru/mail/polis/service/CustomServer.handleEntityRequest</text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.handleGet (1 samples, 0.52%)</title><rect x="205.6" y="771.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="208.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImplementation.get (1 samples, 0.52%)</title><rect x="205.6" y="755.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/RocksByteBufferUtils.copyByteBuffer (1 samples, 0.52%)</title><rect x="205.6" y="739.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.6" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.52%)</title><rect x="205.6" y="723.0" width="6.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="208.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.handlePut (67 samples, 34.72%)</title><rect x="211.8" y="771.0" width="409.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.8" y="782.0">ru/mail/polis/service/CustomServer.handlePut</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.52%)</title><rect x="211.8" y="755.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImplementation.upsert (66 samples, 34.20%)</title><rect x="217.9" y="755.0" width="403.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.9" y="766.0">ru/mail/polis/dao/DAOImplementation.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (22 samples, 11.40%)</title><rect x="217.9" y="739.0" width="134.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.9" y="750.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (22 samples, 11.40%)</title><rect x="217.9" y="723.0" width="134.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.9" y="734.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (19 samples, 9.84%)</title><rect x="217.9" y="707.0" width="116.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="220.9" y="718.0">Java_org_rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.52%)</title><rect x="224.0" y="691.0" width="6.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="227.0" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.52%)</title><rect x="230.1" y="691.0" width="6.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="233.1" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.52%)</title><rect x="236.2" y="691.0" width="6.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="239.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.52%)</title><rect x="242.3" y="691.0" width="6.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="245.3" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (14 samples, 7.25%)</title><rect x="248.4" y="691.0" width="85.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="251.4" y="702.0">rocksdb_ge..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.52%)</title><rect x="254.6" y="675.0" width="6.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="257.6" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 1.04%)</title><rect x="260.7" y="675.0" width="12.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="263.7" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.52%)</title><rect x="266.8" y="659.0" width="6.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="269.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (9 samples, 4.66%)</title><rect x="272.9" y="675.0" width="55.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="275.9" y="686.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (9 samples, 4.66%)</title><rect x="272.9" y="659.0" width="55.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="275.9" y="670.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (8 samples, 4.15%)</title><rect x="272.9" y="643.0" width="48.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="275.9" y="654.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (7 samples, 3.63%)</title><rect x="272.9" y="627.0" width="42.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="275.9" y="638.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (3 samples, 1.55%)</title><rect x="279.0" y="611.0" width="18.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="282.0" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17197499110732040112.so (3 samples, 1.55%)</title><rect x="279.0" y="595.0" width="18.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="282.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (3 samples, 1.55%)</title><rect x="279.0" y="579.0" width="18.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="282.0" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.52%)</title><rect x="291.2" y="563.0" width="6.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="294.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.52%)</title><rect x="297.4" y="611.0" width="6.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="300.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.52%)</title><rect x="303.5" y="611.0" width="6.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="306.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (1 samples, 0.52%)</title><rect x="309.6" y="611.0" width="6.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="312.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.52%)</title><rect x="309.6" y="595.0" width="6.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="312.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.52%)</title><rect x="315.7" y="627.0" width="6.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="318.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.52%)</title><rect x="321.8" y="643.0" width="6.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="324.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.52%)</title><rect x="327.9" y="675.0" width="6.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="330.9" y="686.0"></text>
</g>
<g>
<title>free (1 samples, 0.52%)</title><rect x="334.0" y="707.0" width="6.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="337.0" y="718.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.52%)</title><rect x="340.2" y="707.0" width="6.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="343.2" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.52%)</title><rect x="346.3" y="707.0" width="6.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="349.3" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (44 samples, 22.80%)</title><rect x="352.4" y="739.0" width="269.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.4" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (44 samples, 22.80%)</title><rect x="352.4" y="723.0" width="269.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.4" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.52%)</title><rect x="352.4" y="707.0" width="6.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="355.4" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 1.04%)</title><rect x="358.5" y="707.0" width="12.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="361.5" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (26 samples, 13.47%)</title><rect x="370.7" y="707.0" width="159.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="373.7" y="718.0">Java_org_rocksdb_Roc..</text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.52%)</title><rect x="376.8" y="691.0" width="6.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="379.8" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (24 samples, 12.44%)</title><rect x="383.0" y="691.0" width="146.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="386.0" y="702.0">rocksdb_put_helper..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (24 samples, 12.44%)</title><rect x="383.0" y="675.0" width="146.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="386.0" y="686.0">rocksdb::DB::Put(r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (23 samples, 11.92%)</title><rect x="389.1" y="659.0" width="140.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="392.1" y="670.0">rocksdb::DBImpl::P..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (22 samples, 11.40%)</title><rect x="389.1" y="643.0" width="134.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="392.1" y="654.0">rocksdb::DB::Put(..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (19 samples, 9.84%)</title><rect x="389.1" y="627.0" width="116.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="392.1" y="638.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (17 samples, 8.81%)</title><rect x="389.1" y="611.0" width="103.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="392.1" y="622.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (7 samples, 3.63%)</title><rect x="401.3" y="595.0" width="42.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="404.3" y="606.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (6 samples, 3.11%)</title><rect x="407.4" y="579.0" width="36.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="410.4" y="590.0">roc..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (5 samples, 2.59%)</title><rect x="413.5" y="563.0" width="30.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="416.5" y="574.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni17197499110732040112.so (1 samples, 0.52%)</title><rect x="413.5" y="547.0" width="6.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="416.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (1 samples, 0.52%)</title><rect x="419.6" y="547.0" width="6.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="422.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 1.55%)</title><rect x="425.8" y="547.0" width="18.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="428.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.52%)</title><rect x="425.8" y="531.0" width="6.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="428.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 1.04%)</title><rect x="431.9" y="531.0" width="12.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="434.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.52%)</title><rect x="438.0" y="515.0" width="6.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="441.0" y="526.0"></text>
</g>
<g>
<title>__write (1 samples, 0.52%)</title><rect x="438.0" y="499.0" width="6.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="441.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (8 samples, 4.15%)</title><rect x="444.1" y="595.0" width="48.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="447.1" y="606.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.52%)</title><rect x="444.1" y="579.0" width="6.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="447.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 3.63%)</title><rect x="450.2" y="579.0" width="42.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="453.2" y="590.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 3.63%)</title><rect x="450.2" y="563.0" width="42.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="453.2" y="574.0">rock..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.52%)</title><rect x="450.2" y="547.0" width="6.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="453.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 3.11%)</title><rect x="456.3" y="547.0" width="36.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="459.3" y="558.0">roc..</text>
</g>
<g>
<title>memcpy (1 samples, 0.52%)</title><rect x="456.3" y="531.0" width="6.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="459.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (4 samples, 2.07%)</title><rect x="462.4" y="531.0" width="24.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="465.4" y="542.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni17197499110732040112.so (2 samples, 1.04%)</title><rect x="468.5" y="515.0" width="12.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="471.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 1.04%)</title><rect x="468.5" y="499.0" width="12.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="471.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.52%)</title><rect x="480.8" y="515.0" width="6.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="483.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.52%)</title><rect x="486.9" y="531.0" width="6.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="489.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 1.04%)</title><rect x="493.0" y="611.0" width="12.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="496.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 1.04%)</title><rect x="505.2" y="627.0" width="12.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="508.2" y="638.0"></text>
</g>
<g>
<title>_init (1 samples, 0.52%)</title><rect x="511.3" y="611.0" width="6.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="514.3" y="622.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.52%)</title><rect x="517.5" y="627.0" width="6.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="520.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.52%)</title><rect x="523.6" y="643.0" width="6.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="526.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 7.77%)</title><rect x="529.7" y="707.0" width="91.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="532.7" y="718.0">[unknown]</text>
</g>
<g>
<title>__write (15 samples, 7.77%)</title><rect x="529.7" y="691.0" width="91.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="532.7" y="702.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 7.25%)</title><rect x="535.8" y="675.0" width="85.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="538.8" y="686.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (14 samples, 7.25%)</title><rect x="535.8" y="659.0" width="85.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="538.8" y="670.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_write (14 samples, 7.25%)</title><rect x="535.8" y="643.0" width="85.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="538.8" y="654.0">__x64_sys_..</text>
</g>
<g>
<title>ksys_write (14 samples, 7.25%)</title><rect x="535.8" y="627.0" width="85.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="538.8" y="638.0">ksys_write</text>
</g>
<g>
<title>vfs_write (14 samples, 7.25%)</title><rect x="535.8" y="611.0" width="85.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="538.8" y="622.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (13 samples, 6.74%)</title><rect x="535.8" y="595.0" width="79.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="538.8" y="606.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (13 samples, 6.74%)</title><rect x="535.8" y="579.0" width="79.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="538.8" y="590.0">new_sync_..</text>
</g>
<g>
<title>ext4_file_write_iter (13 samples, 6.74%)</title><rect x="535.8" y="563.0" width="79.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="538.8" y="574.0">ext4_file..</text>
</g>
<g>
<title>__generic_file_write_iter (13 samples, 6.74%)</title><rect x="535.8" y="547.0" width="79.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="538.8" y="558.0">__generic..</text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.52%)</title><rect x="535.8" y="531.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="538.8" y="542.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.52%)</title><rect x="541.9" y="531.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="544.9" y="542.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.52%)</title><rect x="541.9" y="515.0" width="6.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="544.9" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.52%)</title><rect x="541.9" y="499.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.9" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.52%)</title><rect x="541.9" y="483.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.9" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.52%)</title><rect x="541.9" y="467.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="544.9" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.52%)</title><rect x="541.9" y="451.0" width="6.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="544.9" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (11 samples, 5.70%)</title><rect x="548.0" y="531.0" width="67.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="551.0" y="542.0">generic..</text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 1.55%)</title><rect x="548.0" y="515.0" width="18.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="551.0" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 1.55%)</title><rect x="548.0" y="499.0" width="18.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="551.0" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 1.55%)</title><rect x="548.0" y="483.0" width="18.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.0" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 1.55%)</title><rect x="548.0" y="467.0" width="18.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="551.0" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (6 samples, 3.11%)</title><rect x="566.4" y="515.0" width="36.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="569.4" y="526.0">ext..</text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 1.04%)</title><rect x="566.4" y="499.0" width="12.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="569.4" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 1.04%)</title><rect x="566.4" y="483.0" width="12.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="569.4" y="494.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.52%)</title><rect x="572.5" y="467.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="575.5" y="478.0"></text>
</g>
<g>
<title>generic_write_end (4 samples, 2.07%)</title><rect x="578.6" y="499.0" width="24.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="581.6" y="510.0">g..</text>
</g>
<g>
<title>__generic_write_end (4 samples, 2.07%)</title><rect x="578.6" y="483.0" width="24.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="581.6" y="494.0">_..</text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 2.07%)</title><rect x="578.6" y="467.0" width="24.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="581.6" y="478.0">_..</text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 2.07%)</title><rect x="578.6" y="451.0" width="24.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="581.6" y="462.0">e..</text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.52%)</title><rect x="578.6" y="435.0" width="6.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="581.6" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.52%)</title><rect x="578.6" y="419.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="581.6" y="430.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 1.55%)</title><rect x="584.7" y="435.0" width="18.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="587.7" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 1.04%)</title><rect x="584.7" y="419.0" width="12.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="587.7" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 1.04%)</title><rect x="584.7" y="403.0" width="12.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="587.7" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.52%)</title><rect x="590.8" y="387.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="593.8" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (1 samples, 0.52%)</title><rect x="590.8" y="371.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="593.8" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.52%)</title><rect x="590.8" y="355.0" width="6.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="593.8" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.52%)</title><rect x="596.9" y="419.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="599.9" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.52%)</title><rect x="596.9" y="403.0" width="6.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="599.9" y="414.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.52%)</title><rect x="596.9" y="387.0" width="6.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="599.9" y="398.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 1.04%)</title><rect x="603.1" y="515.0" width="12.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="606.1" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 1.04%)</title><rect x="603.1" y="499.0" width="12.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="606.1" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.52%)</title><rect x="615.3" y="595.0" width="6.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="618.3" y="606.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.52%)</title><rect x="615.3" y="579.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="618.3" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.52%)</title><rect x="615.3" y="563.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="618.3" y="574.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.52%)</title><rect x="615.3" y="547.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="618.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.sendResponse (37 samples, 19.17%)</title><rect x="621.4" y="771.0" width="226.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.4" y="782.0">ru/mail/polis/service/CustomSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (37 samples, 19.17%)</title><rect x="621.4" y="755.0" width="226.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.4" y="766.0">one/nio/http/HttpSession.sendR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (37 samples, 19.17%)</title><rect x="621.4" y="739.0" width="226.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.4" y="750.0">one/nio/http/HttpSession.write..</text>
</g>
<g>
<title>one/nio/net/Session.write (37 samples, 19.17%)</title><rect x="621.4" y="723.0" width="226.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.4" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (37 samples, 19.17%)</title><rect x="621.4" y="707.0" width="226.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.4" y="718.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (37 samples, 19.17%)</title><rect x="621.4" y="691.0" width="226.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.4" y="702.0">one/nio/net/Session$ArrayQueue..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (37 samples, 19.17%)</title><rect x="621.4" y="675.0" width="226.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.4" y="686.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>[unknown] (1 samples, 0.52%)</title><rect x="621.4" y="659.0" width="6.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="624.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.52%)</title><rect x="621.4" y="643.0" width="6.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="624.4" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.52%)</title><rect x="621.4" y="627.0" width="6.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="624.4" y="638.0"></text>
</g>
<g>
<title>__send (36 samples, 18.65%)</title><rect x="627.5" y="659.0" width="220.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="630.5" y="670.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 18.65%)</title><rect x="627.5" y="643.0" width="220.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="630.5" y="654.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (36 samples, 18.65%)</title><rect x="627.5" y="627.0" width="220.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="630.5" y="638.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (36 samples, 18.65%)</title><rect x="627.5" y="611.0" width="220.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="630.5" y="622.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (36 samples, 18.65%)</title><rect x="627.5" y="595.0" width="220.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="630.5" y="606.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (36 samples, 18.65%)</title><rect x="627.5" y="579.0" width="220.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="630.5" y="590.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (35 samples, 18.13%)</title><rect x="633.6" y="563.0" width="214.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.6" y="574.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (35 samples, 18.13%)</title><rect x="633.6" y="547.0" width="214.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="636.6" y="558.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (35 samples, 18.13%)</title><rect x="633.6" y="531.0" width="214.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.6" y="542.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.52%)</title><rect x="633.6" y="515.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="636.6" y="526.0"></text>
</g>
<g>
<title>tcp_push (34 samples, 17.62%)</title><rect x="639.7" y="515.0" width="207.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="642.7" y="526.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (34 samples, 17.62%)</title><rect x="639.7" y="499.0" width="207.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="642.7" y="510.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (34 samples, 17.62%)</title><rect x="639.7" y="483.0" width="207.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="642.7" y="494.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (33 samples, 17.10%)</title><rect x="639.7" y="467.0" width="201.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="642.7" y="478.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (31 samples, 16.06%)</title><rect x="639.7" y="451.0" width="189.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="642.7" y="462.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (31 samples, 16.06%)</title><rect x="639.7" y="435.0" width="189.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="642.7" y="446.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (30 samples, 15.54%)</title><rect x="645.9" y="419.0" width="183.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="648.9" y="430.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (2 samples, 1.04%)</title><rect x="645.9" y="403.0" width="12.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="648.9" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.52%)</title><rect x="645.9" y="387.0" width="6.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="648.9" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.52%)</title><rect x="652.0" y="387.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="655.0" y="398.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.52%)</title><rect x="652.0" y="371.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="655.0" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.52%)</title><rect x="652.0" y="355.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="655.0" y="366.0"></text>
</g>
<g>
<title>ip_output (27 samples, 13.99%)</title><rect x="658.1" y="403.0" width="165.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="661.1" y="414.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (27 samples, 13.99%)</title><rect x="658.1" y="387.0" width="165.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="661.1" y="398.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.52%)</title><rect x="658.1" y="371.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="661.1" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (26 samples, 13.47%)</title><rect x="664.2" y="371.0" width="159.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="667.2" y="382.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (22 samples, 11.40%)</title><rect x="664.2" y="355.0" width="134.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="667.2" y="366.0">__local_bh_enable..</text>
</g>
<g>
<title>do_softirq.part.20 (22 samples, 11.40%)</title><rect x="664.2" y="339.0" width="134.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="667.2" y="350.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (22 samples, 11.40%)</title><rect x="664.2" y="323.0" width="134.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="667.2" y="334.0">do_softirq_own_st..</text>
</g>
<g>
<title>__softirqentry_text_start (22 samples, 11.40%)</title><rect x="664.2" y="307.0" width="134.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="667.2" y="318.0">__softirqentry_te..</text>
</g>
<g>
<title>net_rx_action (22 samples, 11.40%)</title><rect x="664.2" y="291.0" width="134.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="667.2" y="302.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (22 samples, 11.40%)</title><rect x="664.2" y="275.0" width="134.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="667.2" y="286.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (22 samples, 11.40%)</title><rect x="664.2" y="259.0" width="134.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="667.2" y="270.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (22 samples, 11.40%)</title><rect x="664.2" y="243.0" width="134.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="667.2" y="254.0">__netif_receive_s..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.52%)</title><rect x="664.2" y="227.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="667.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv (20 samples, 10.36%)</title><rect x="670.3" y="227.0" width="122.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="673.3" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (20 samples, 10.36%)</title><rect x="670.3" y="211.0" width="122.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="673.3" y="222.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (20 samples, 10.36%)</title><rect x="670.3" y="195.0" width="122.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="673.3" y="206.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 10.36%)</title><rect x="670.3" y="179.0" width="122.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="673.3" y="190.0">ip_local_delive..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (19 samples, 9.84%)</title><rect x="670.3" y="163.0" width="116.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="673.3" y="174.0">ip_protocol_de..</text>
</g>
<g>
<title>tcp_v4_rcv (19 samples, 9.84%)</title><rect x="670.3" y="147.0" width="116.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="673.3" y="158.0">tcp_v4_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.52%)</title><rect x="670.3" y="131.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="673.3" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.52%)</title><rect x="676.4" y="131.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="679.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (17 samples, 8.81%)</title><rect x="682.5" y="131.0" width="104.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="685.5" y="142.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (17 samples, 8.81%)</title><rect x="682.5" y="115.0" width="104.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="685.5" y="126.0">tcp_rcv_esta..</text>
</g>
<g>
<title>tcp_ack (2 samples, 1.04%)</title><rect x="682.5" y="99.0" width="12.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="685.5" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 1.04%)</title><rect x="682.5" y="83.0" width="12.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="685.5" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.52%)</title><rect x="688.7" y="67.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="691.7" y="78.0"></text>
</g>
<g>
<title>tcp_data_queue (14 samples, 7.25%)</title><rect x="694.8" y="99.0" width="85.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="697.8" y="110.0">tcp_data_q..</text>
</g>
<g>
<title>sock_def_readable (14 samples, 7.25%)</title><rect x="694.8" y="83.0" width="85.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="697.8" y="94.0">sock_def_r..</text>
</g>
<g>
<title>__wake_up_sync_key (14 samples, 7.25%)</title><rect x="694.8" y="67.0" width="85.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="697.8" y="78.0">__wake_up_..</text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 7.25%)</title><rect x="694.8" y="51.0" width="85.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="697.8" y="62.0">__wake_up_..</text>
</g>
<g>
<title>__lock_text_start (14 samples, 7.25%)</title><rect x="694.8" y="35.0" width="85.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="697.8" y="46.0">__lock_tex..</text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.52%)</title><rect x="780.4" y="99.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="783.4" y="110.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.52%)</title><rect x="786.5" y="163.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="789.5" y="174.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.52%)</title><rect x="792.6" y="227.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="795.6" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 2.07%)</title><rect x="798.7" y="355.0" width="24.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="801.7" y="366.0">d..</text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 2.07%)</title><rect x="798.7" y="339.0" width="24.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="801.7" y="350.0">_..</text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 1.55%)</title><rect x="804.8" y="323.0" width="18.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="807.8" y="334.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.52%)</title><rect x="804.8" y="307.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="807.8" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 1.04%)</title><rect x="810.9" y="307.0" width="12.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="813.9" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.52%)</title><rect x="810.9" y="291.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="813.9" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.52%)</title><rect x="810.9" y="275.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="813.9" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.52%)</title><rect x="810.9" y="259.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="813.9" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.52%)</title><rect x="817.0" y="291.0" width="6.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="820.0" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.52%)</title><rect x="823.2" y="403.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="826.2" y="414.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 1.04%)</title><rect x="829.3" y="451.0" width="12.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="832.3" y="462.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 1.04%)</title><rect x="829.3" y="435.0" width="12.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="832.3" y="446.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.52%)</title><rect x="835.4" y="419.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="838.4" y="430.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.52%)</title><rect x="841.5" y="467.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="844.5" y="478.0"></text>
</g>
<g>
<title>read_hv_clock_tsc (1 samples, 0.52%)</title><rect x="841.5" y="451.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="844.5" y="462.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (56 samples, 29.02%)</title><rect x="847.6" y="867.0" width="342.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.6" y="878.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 8.81%)</title><rect x="847.6" y="851.0" width="104.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.6" y="862.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (17 samples, 8.81%)</title><rect x="847.6" y="835.0" width="104.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.6" y="846.0">one/nio/net/..</text>
</g>
<g>
<title>[unknown] (12 samples, 6.22%)</title><rect x="866.0" y="819.0" width="73.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="869.0" y="830.0">[unknown]</text>
</g>
<g>
<title>[unknown] (12 samples, 6.22%)</title><rect x="866.0" y="803.0" width="73.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="869.0" y="814.0">[unknown]</text>
</g>
<g>
<title>epoll_wait (12 samples, 6.22%)</title><rect x="866.0" y="787.0" width="73.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="869.0" y="798.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 5.70%)</title><rect x="872.1" y="771.0" width="67.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="875.1" y="782.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 5.70%)</title><rect x="872.1" y="755.0" width="67.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="875.1" y="766.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (10 samples, 5.18%)</title><rect x="878.2" y="739.0" width="61.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="881.2" y="750.0">__x64_..</text>
</g>
<g>
<title>do_epoll_wait (10 samples, 5.18%)</title><rect x="878.2" y="723.0" width="61.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="881.2" y="734.0">do_epo..</text>
</g>
<g>
<title>ep_poll (10 samples, 5.18%)</title><rect x="878.2" y="707.0" width="61.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="881.2" y="718.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (4 samples, 2.07%)</title><rect x="884.3" y="691.0" width="24.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="887.3" y="702.0">e..</text>
</g>
<g>
<title>mutex_lock (1 samples, 0.52%)</title><rect x="902.6" y="675.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="905.6" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 2.59%)</title><rect x="908.8" y="691.0" width="30.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="911.8" y="702.0">sc..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 2.59%)</title><rect x="908.8" y="675.0" width="30.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="911.8" y="686.0">sc..</text>
</g>
<g>
<title>schedule (5 samples, 2.59%)</title><rect x="908.8" y="659.0" width="30.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="911.8" y="670.0">sc..</text>
</g>
<g>
<title>__schedule (5 samples, 2.59%)</title><rect x="908.8" y="643.0" width="30.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="911.8" y="654.0">__..</text>
</g>
<g>
<title>finish_task_switch (5 samples, 2.59%)</title><rect x="908.8" y="627.0" width="30.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="911.8" y="638.0">fi..</text>
</g>
<g>
<title>__clock_gettime (2 samples, 1.04%)</title><rect x="939.3" y="819.0" width="12.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="942.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (39 samples, 20.21%)</title><rect x="951.6" y="851.0" width="238.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="954.6" y="862.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (39 samples, 20.21%)</title><rect x="951.6" y="835.0" width="238.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="954.6" y="846.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (22 samples, 11.40%)</title><rect x="951.6" y="819.0" width="134.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="954.6" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (19 samples, 9.84%)</title><rect x="957.7" y="803.0" width="116.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.7" y="814.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (19 samples, 9.84%)</title><rect x="957.7" y="787.0" width="116.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="960.7" y="798.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (18 samples, 9.33%)</title><rect x="957.7" y="771.0" width="110.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.7" y="782.0">RequestHandle..</text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.entity (18 samples, 9.33%)</title><rect x="957.7" y="755.0" width="110.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="960.7" y="766.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (18 samples, 9.33%)</title><rect x="957.7" y="739.0" width="110.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.7" y="750.0">one/nio/serve..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 9.33%)</title><rect x="957.7" y="723.0" width="110.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.7" y="734.0">java/util/con..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (18 samples, 9.33%)</title><rect x="957.7" y="707.0" width="110.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.7" y="718.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (18 samples, 9.33%)</title><rect x="957.7" y="691.0" width="110.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.7" y="702.0">one/nio/serve..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (18 samples, 9.33%)</title><rect x="957.7" y="675.0" width="110.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.7" y="686.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (18 samples, 9.33%)</title><rect x="957.7" y="659.0" width="110.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.7" y="670.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (17 samples, 8.81%)</title><rect x="957.7" y="643.0" width="103.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.7" y="654.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 8.81%)</title><rect x="957.7" y="627.0" width="103.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.7" y="638.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 8.81%)</title><rect x="957.7" y="611.0" width="103.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.7" y="622.0">jdk/internal..</text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 3.63%)</title><rect x="957.7" y="595.0" width="42.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="960.7" y="606.0">Unsa..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.52%)</title><rect x="963.8" y="579.0" width="6.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="966.8" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.52%)</title><rect x="969.9" y="579.0" width="6.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="972.9" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.52%)</title><rect x="976.0" y="579.0" width="6.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="979.0" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 1.04%)</title><rect x="982.1" y="579.0" width="12.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="985.1" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.52%)</title><rect x="994.4" y="579.0" width="6.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="997.4" y="590.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 5.18%)</title><rect x="1000.5" y="595.0" width="61.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1003.5" y="606.0">pthrea..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 5.18%)</title><rect x="1000.5" y="579.0" width="61.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1003.5" y="590.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 5.18%)</title><rect x="1000.5" y="563.0" width="61.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1003.5" y="574.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 5.18%)</title><rect x="1000.5" y="547.0" width="61.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1003.5" y="558.0">__x64_..</text>
</g>
<g>
<title>do_futex (10 samples, 5.18%)</title><rect x="1000.5" y="531.0" width="61.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1003.5" y="542.0">do_futex</text>
</g>
<g>
<title>futex_wake (9 samples, 4.66%)</title><rect x="1000.5" y="515.0" width="55.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1003.5" y="526.0">futex..</text>
</g>
<g>
<title>wake_up_q (9 samples, 4.66%)</title><rect x="1000.5" y="499.0" width="55.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1003.5" y="510.0">wake_..</text>
</g>
<g>
<title>try_to_wake_up (9 samples, 4.66%)</title><rect x="1000.5" y="483.0" width="55.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1003.5" y="494.0">try_t..</text>
</g>
<g>
<title>__lock_text_start (9 samples, 4.66%)</title><rect x="1000.5" y="467.0" width="55.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1003.5" y="478.0">__loc..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.52%)</title><rect x="1055.5" y="515.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1058.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.52%)</title><rect x="1061.6" y="643.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (1 samples, 0.52%)</title><rect x="1061.6" y="627.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.52%)</title><rect x="1067.7" y="771.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1070.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.52%)</title><rect x="1067.7" y="755.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1070.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.52%)</title><rect x="1067.7" y="739.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1070.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.52%)</title><rect x="1067.7" y="723.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.7" y="734.0"></text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (1 samples, 0.52%)</title><rect x="1067.7" y="707.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1070.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 1.04%)</title><rect x="1073.8" y="803.0" width="12.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1076.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 1.04%)</title><rect x="1073.8" y="787.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.52%)</title><rect x="1073.8" y="771.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.52%)</title><rect x="1079.9" y="771.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1082.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.52%)</title><rect x="1079.9" y="755.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1082.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.52%)</title><rect x="1079.9" y="739.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (17 samples, 8.81%)</title><rect x="1086.1" y="819.0" width="103.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.1" y="830.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 8.81%)</title><rect x="1086.1" y="803.0" width="103.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1089.1" y="814.0">one/nio/net/..</text>
</g>
<g>
<title>[unknown] (3 samples, 1.55%)</title><rect x="1098.3" y="787.0" width="18.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1101.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 1.55%)</title><rect x="1098.3" y="771.0" width="18.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1101.3" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 1.55%)</title><rect x="1098.3" y="755.0" width="18.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1101.3" y="766.0"></text>
</g>
<g>
<title>_init (1 samples, 0.52%)</title><rect x="1098.3" y="739.0" width="6.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1101.3" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 1.04%)</title><rect x="1104.4" y="739.0" width="12.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1107.4" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.52%)</title><rect x="1104.4" y="723.0" width="6.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1107.4" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.52%)</title><rect x="1110.5" y="723.0" width="6.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1113.5" y="734.0"></text>
</g>
<g>
<title>recv (12 samples, 6.22%)</title><rect x="1116.6" y="787.0" width="73.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1119.6" y="798.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 4.15%)</title><rect x="1141.1" y="771.0" width="48.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1144.1" y="782.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.52%)</title><rect x="1141.1" y="755.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1144.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 3.63%)</title><rect x="1147.2" y="755.0" width="42.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1150.2" y="766.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 3.63%)</title><rect x="1147.2" y="739.0" width="42.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.2" y="750.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 3.63%)</title><rect x="1147.2" y="723.0" width="42.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.2" y="734.0">__sy..</text>
</g>
<g>
<title>sock_recvmsg (7 samples, 3.63%)</title><rect x="1147.2" y="707.0" width="42.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1150.2" y="718.0">sock..</text>
</g>
<g>
<title>inet_recvmsg (7 samples, 3.63%)</title><rect x="1147.2" y="691.0" width="42.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1150.2" y="702.0">inet..</text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 3.63%)</title><rect x="1147.2" y="675.0" width="42.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1150.2" y="686.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 1.04%)</title><rect x="1159.4" y="659.0" width="12.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1162.4" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.52%)</title><rect x="1159.4" y="643.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1162.4" y="654.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.52%)</title><rect x="1159.4" y="627.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1162.4" y="638.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.52%)</title><rect x="1165.5" y="643.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1168.5" y="654.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.52%)</title><rect x="1171.7" y="659.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1174.7" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.52%)</title><rect x="1177.8" y="659.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1180.8" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.52%)</title><rect x="1177.8" y="643.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1180.8" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.52%)</title><rect x="1177.8" y="627.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1180.8" y="638.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.52%)</title><rect x="1177.8" y="611.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1180.8" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.52%)</title><rect x="1183.9" y="659.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1186.9" y="670.0"></text>
</g>
</g>
</svg>
