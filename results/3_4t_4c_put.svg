<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="869"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="869"> </text>
<g id="frames">
<g>
<title>all (107 samples, 100.00%)</title><rect x="10.0" y="835.0" width="1180.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.0" y="846.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 2.80%)</title><rect x="10.0" y="819.0" width="33.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="830.0">[n..</text>
</g>
<g>
<title>[unknown] (3 samples, 2.80%)</title><rect x="10.0" y="803.0" width="33.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="814.0">[u..</text>
</g>
<g>
<title>__clock_gettime (3 samples, 2.80%)</title><rect x="10.0" y="787.0" width="33.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="798.0">__..</text>
</g>
<g>
<title>[vdso] (3 samples, 2.80%)</title><rect x="10.0" y="771.0" width="33.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="782.0">[v..</text>
</g>
<g>
<title>java/lang/Thread.run (80 samples, 74.77%)</title><rect x="43.1" y="819.0" width="882.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.1" y="830.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (80 samples, 74.77%)</title><rect x="43.1" y="803.0" width="882.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.1" y="814.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (80 samples, 74.77%)</title><rect x="43.1" y="787.0" width="882.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.1" y="798.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 18.69%)</title><rect x="43.1" y="771.0" width="220.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.1" y="782.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (20 samples, 18.69%)</title><rect x="43.1" y="755.0" width="220.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.1" y="766.0">java/util/concurrent/Synchron..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (20 samples, 18.69%)</title><rect x="43.1" y="739.0" width="220.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.1" y="750.0">java/util/concurrent/Synchron..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (18 samples, 16.82%)</title><rect x="54.1" y="723.0" width="198.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.1" y="734.0">java/util/concurrent/Synch..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (18 samples, 16.82%)</title><rect x="54.1" y="707.0" width="198.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.1" y="718.0">java/util/concurrent/locks..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 16.82%)</title><rect x="54.1" y="691.0" width="198.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.1" y="702.0">jdk/internal/misc/Unsafe.p..</text>
</g>
<g>
<title>Unsafe_Park (6 samples, 5.61%)</title><rect x="65.1" y="675.0" width="66.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="68.1" y="686.0">Unsafe_..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.93%)</title><rect x="76.2" y="659.0" width="11.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="79.2" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.93%)</title><rect x="87.2" y="659.0" width="11.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="90.2" y="670.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.93%)</title><rect x="87.2" y="643.0" width="11.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="90.2" y="654.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.93%)</title><rect x="98.2" y="659.0" width="11.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="101.2" y="670.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 1.87%)</title><rect x="109.3" y="659.0" width="22.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="112.3" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.93%)</title><rect x="120.3" y="643.0" width="11.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="123.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.93%)</title><rect x="120.3" y="627.0" width="11.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="123.3" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.93%)</title><rect x="120.3" y="611.0" width="11.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="123.3" y="622.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.93%)</title><rect x="120.3" y="595.0" width="11.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="123.3" y="606.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.93%)</title><rect x="120.3" y="579.0" width="11.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="123.3" y="590.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.93%)</title><rect x="120.3" y="563.0" width="11.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="123.3" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (9 samples, 8.41%)</title><rect x="131.3" y="675.0" width="99.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="134.3" y="686.0">__pthread_co..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 8.41%)</title><rect x="131.3" y="659.0" width="99.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="134.3" y="670.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 8.41%)</title><rect x="131.3" y="643.0" width="99.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="134.3" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 8.41%)</title><rect x="131.3" y="627.0" width="99.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="134.3" y="638.0">__x64_sys_fu..</text>
</g>
<g>
<title>do_futex (9 samples, 8.41%)</title><rect x="131.3" y="611.0" width="99.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="134.3" y="622.0">do_futex</text>
</g>
<g>
<title>futex_wait (8 samples, 7.48%)</title><rect x="131.3" y="595.0" width="88.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="134.3" y="606.0">futex_wait</text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 5.61%)</title><rect x="131.3" y="579.0" width="66.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="134.3" y="590.0">futex_w..</text>
</g>
<g>
<title>schedule (6 samples, 5.61%)</title><rect x="131.3" y="563.0" width="66.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="134.3" y="574.0">schedule</text>
</g>
<g>
<title>__schedule (6 samples, 5.61%)</title><rect x="131.3" y="547.0" width="66.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="134.3" y="558.0">__sched..</text>
</g>
<g>
<title>finish_task_switch (6 samples, 5.61%)</title><rect x="131.3" y="531.0" width="66.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="134.3" y="542.0">finish_..</text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.93%)</title><rect x="197.5" y="579.0" width="11.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="200.5" y="590.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.93%)</title><rect x="208.5" y="579.0" width="11.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="211.5" y="590.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.93%)</title><rect x="219.5" y="595.0" width="11.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="222.5" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.93%)</title><rect x="230.6" y="675.0" width="11.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="233.6" y="686.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.93%)</title><rect x="241.6" y="675.0" width="11.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="244.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.93%)</title><rect x="252.6" y="723.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="255.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer$$Lambda$60/455987337.run (60 samples, 56.07%)</title><rect x="263.6" y="771.0" width="661.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.6" y="782.0">ru/mail/polis/service/CustomServer$$Lambda$60/455987337.run</text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.lambda$entity$0 (59 samples, 55.14%)</title><rect x="274.7" y="755.0" width="650.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.7" y="766.0">ru/mail/polis/service/CustomServer.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.handleEntityRequest (59 samples, 55.14%)</title><rect x="274.7" y="739.0" width="650.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.7" y="750.0">ru/mail/polis/service/CustomServer.handleEntityRequest</text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.handlePut (40 samples, 37.38%)</title><rect x="274.7" y="723.0" width="441.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.7" y="734.0">ru/mail/polis/service/CustomServer.handlePut</text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImplementation.upsert (40 samples, 37.38%)</title><rect x="274.7" y="707.0" width="441.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.7" y="718.0">ru/mail/polis/dao/DAOImplementation.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.delete (21 samples, 19.63%)</title><rect x="274.7" y="691.0" width="231.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.7" y="702.0">org/rocksdb/RocksDB.delete</text>
</g>
<g>
<title>org/rocksdb/RocksDB.delete (21 samples, 19.63%)</title><rect x="274.7" y="675.0" width="231.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.7" y="686.0">org/rocksdb/RocksDB.delete</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_delete__J_3BII (14 samples, 13.08%)</title><rect x="274.7" y="659.0" width="154.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="277.7" y="670.0">Java_org_rocksdb_Roc..</text>
</g>
<g>
<title>rocksdb_delete_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (14 samples, 13.08%)</title><rect x="274.7" y="643.0" width="154.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="277.7" y="654.0">rocksdb_delete_helpe..</text>
</g>
<g>
<title>rocksdb::DB::Delete(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;) (14 samples, 13.08%)</title><rect x="274.7" y="627.0" width="154.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="277.7" y="638.0">rocksdb::DB::Delete(..</text>
</g>
<g>
<title>rocksdb::DBImpl::Delete(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;) (14 samples, 13.08%)</title><rect x="274.7" y="611.0" width="154.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="277.7" y="622.0">rocksdb::DBImpl::Del..</text>
</g>
<g>
<title>rocksdb::DB::Delete(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;) (13 samples, 12.15%)</title><rect x="274.7" y="595.0" width="143.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="277.7" y="606.0">rocksdb::DB::Delet..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (12 samples, 11.21%)</title><rect x="274.7" y="579.0" width="132.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="277.7" y="590.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.93%)</title><rect x="274.7" y="563.0" width="11.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="277.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (10 samples, 9.35%)</title><rect x="285.7" y="563.0" width="110.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="288.7" y="574.0">rocksdb::DBIm..</text>
</g>
<g>
<title>_init (1 samples, 0.93%)</title><rect x="307.8" y="547.0" width="11.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="310.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 2.80%)</title><rect x="318.8" y="547.0" width="33.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="321.8" y="558.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.93%)</title><rect x="329.8" y="531.0" width="11.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="332.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.93%)</title><rect x="340.8" y="531.0" width="11.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="343.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.93%)</title><rect x="340.8" y="515.0" width="11.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="343.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.93%)</title><rect x="340.8" y="499.0" width="11.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="343.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.93%)</title><rect x="340.8" y="483.0" width="11.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="343.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (4 samples, 3.74%)</title><rect x="351.9" y="547.0" width="44.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="354.9" y="558.0">rock..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 3.74%)</title><rect x="351.9" y="531.0" width="44.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="354.9" y="542.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::DeleteCF(unsigned int, rocksdb::Slice const&amp;) (4 samples, 3.74%)</title><rect x="351.9" y="515.0" width="44.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="354.9" y="526.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (4 samples, 3.74%)</title><rect x="351.9" y="499.0" width="44.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="354.9" y="510.0">rock..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 3.74%)</title><rect x="351.9" y="483.0" width="44.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="354.9" y="494.0">bool..</text>
</g>
<g>
<title>/tmp/librocksdbjni17197499110732040112.so (4 samples, 3.74%)</title><rect x="351.9" y="467.0" width="44.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="354.9" y="478.0">/tmp..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.93%)</title><rect x="385.0" y="451.0" width="11.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="388.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.93%)</title><rect x="396.0" y="563.0" width="11.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="399.0" y="574.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.93%)</title><rect x="407.0" y="579.0" width="11.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="410.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Delete(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;) (1 samples, 0.93%)</title><rect x="418.0" y="595.0" width="11.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="421.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 6.54%)</title><rect x="429.1" y="659.0" width="77.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="432.1" y="670.0">[unknown]</text>
</g>
<g>
<title>__write (7 samples, 6.54%)</title><rect x="429.1" y="643.0" width="77.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="432.1" y="654.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 6.54%)</title><rect x="429.1" y="627.0" width="77.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="432.1" y="638.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (7 samples, 6.54%)</title><rect x="429.1" y="611.0" width="77.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="432.1" y="622.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_write (7 samples, 6.54%)</title><rect x="429.1" y="595.0" width="77.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.1" y="606.0">__x64_sys..</text>
</g>
<g>
<title>ksys_write (7 samples, 6.54%)</title><rect x="429.1" y="579.0" width="77.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="432.1" y="590.0">ksys_write</text>
</g>
<g>
<title>vfs_write (7 samples, 6.54%)</title><rect x="429.1" y="563.0" width="77.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="432.1" y="574.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (7 samples, 6.54%)</title><rect x="429.1" y="547.0" width="77.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="432.1" y="558.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (7 samples, 6.54%)</title><rect x="429.1" y="531.0" width="77.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="432.1" y="542.0">new_sync_..</text>
</g>
<g>
<title>ext4_file_write_iter (7 samples, 6.54%)</title><rect x="429.1" y="515.0" width="77.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="432.1" y="526.0">ext4_file..</text>
</g>
<g>
<title>__generic_file_write_iter (7 samples, 6.54%)</title><rect x="429.1" y="499.0" width="77.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="432.1" y="510.0">__generic..</text>
</g>
<g>
<title>file_update_time (3 samples, 2.80%)</title><rect x="429.1" y="483.0" width="33.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="432.1" y="494.0">fi..</text>
</g>
<g>
<title>generic_update_time (3 samples, 2.80%)</title><rect x="429.1" y="467.0" width="33.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.1" y="478.0">ge..</text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 2.80%)</title><rect x="429.1" y="451.0" width="33.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="432.1" y="462.0">__..</text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 2.80%)</title><rect x="429.1" y="435.0" width="33.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="432.1" y="446.0">ex..</text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 2.80%)</title><rect x="429.1" y="419.0" width="33.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.1" y="430.0">ex..</text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 1.87%)</title><rect x="440.1" y="403.0" width="22.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="443.1" y="414.0">e..</text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.93%)</title><rect x="451.1" y="387.0" width="11.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="454.1" y="398.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.93%)</title><rect x="451.1" y="371.0" width="11.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="454.1" y="382.0"></text>
</g>
<g>
<title>generic_perform_write (4 samples, 3.74%)</title><rect x="462.1" y="483.0" width="44.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="465.1" y="494.0">gene..</text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.93%)</title><rect x="462.1" y="467.0" width="11.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="465.1" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.93%)</title><rect x="462.1" y="451.0" width="11.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.1" y="462.0"></text>
</g>
<g>
<title>ext4_da_write_end (3 samples, 2.80%)</title><rect x="473.2" y="467.0" width="33.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.2" y="478.0">ex..</text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.93%)</title><rect x="473.2" y="451.0" width="11.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="476.2" y="462.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.93%)</title><rect x="473.2" y="435.0" width="11.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="476.2" y="446.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.93%)</title><rect x="473.2" y="419.0" width="11.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="476.2" y="430.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 1.87%)</title><rect x="484.2" y="451.0" width="22.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="487.2" y="462.0">g..</text>
</g>
<g>
<title>__generic_write_end (2 samples, 1.87%)</title><rect x="484.2" y="435.0" width="22.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="487.2" y="446.0">_..</text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 1.87%)</title><rect x="484.2" y="419.0" width="22.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="487.2" y="430.0">_..</text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 1.87%)</title><rect x="484.2" y="403.0" width="22.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="487.2" y="414.0">e..</text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 1.87%)</title><rect x="484.2" y="387.0" width="22.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="487.2" y="398.0">e..</text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.93%)</title><rect x="484.2" y="371.0" width="11.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="487.2" y="382.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.93%)</title><rect x="484.2" y="355.0" width="11.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="487.2" y="366.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.93%)</title><rect x="484.2" y="339.0" width="11.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="487.2" y="350.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (1 samples, 0.93%)</title><rect x="484.2" y="323.0" width="11.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="487.2" y="334.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.93%)</title><rect x="484.2" y="307.0" width="11.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="487.2" y="318.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.93%)</title><rect x="484.2" y="291.0" width="11.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="487.2" y="302.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.93%)</title><rect x="495.2" y="371.0" width="11.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="498.2" y="382.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.93%)</title><rect x="495.2" y="355.0" width="11.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="498.2" y="366.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (10 samples, 9.35%)</title><rect x="506.3" y="691.0" width="110.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.3" y="702.0">org/rocksdb/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (10 samples, 9.35%)</title><rect x="506.3" y="675.0" width="110.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.3" y="686.0">org/rocksdb/R..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (9 samples, 8.41%)</title><rect x="517.3" y="659.0" width="99.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="520.3" y="670.0">Java_org_roc..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.93%)</title><rect x="517.3" y="643.0" width="11.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="520.3" y="654.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.93%)</title><rect x="528.3" y="643.0" width="11.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="531.3" y="654.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (7 samples, 6.54%)</title><rect x="539.3" y="643.0" width="77.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="542.3" y="654.0">rocksdb_g..</text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.93%)</title><rect x="539.3" y="627.0" width="11.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="542.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (3 samples, 2.80%)</title><rect x="550.4" y="627.0" width="33.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="553.4" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (3 samples, 2.80%)</title><rect x="550.4" y="611.0" width="33.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="553.4" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (3 samples, 2.80%)</title><rect x="550.4" y="595.0" width="33.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="553.4" y="606.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (3 samples, 2.80%)</title><rect x="550.4" y="579.0" width="33.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="553.4" y="590.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.93%)</title><rect x="550.4" y="563.0" width="11.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="553.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.93%)</title><rect x="550.4" y="547.0" width="11.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="553.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.93%)</title><rect x="561.4" y="563.0" width="11.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="564.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.93%)</title><rect x="561.4" y="547.0" width="11.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="564.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.93%)</title><rect x="572.4" y="563.0" width="11.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="575.4" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17197499110732040112.so (1 samples, 0.93%)</title><rect x="572.4" y="547.0" width="11.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="575.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.93%)</title><rect x="572.4" y="531.0" width="11.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="575.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.93%)</title><rect x="572.4" y="515.0" width="11.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="575.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (3 samples, 2.80%)</title><rect x="583.5" y="627.0" width="33.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="586.5" y="638.0">ro..</text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 1.87%)</title><rect x="583.5" y="611.0" width="22.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="586.5" y="622.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.93%)</title><rect x="583.5" y="595.0" width="11.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="586.5" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.93%)</title><rect x="594.5" y="595.0" width="11.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="597.5" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.93%)</title><rect x="594.5" y="579.0" width="11.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="597.5" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.93%)</title><rect x="594.5" y="563.0" width="11.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="597.5" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.93%)</title><rect x="594.5" y="547.0" width="11.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="597.5" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.93%)</title><rect x="605.5" y="611.0" width="11.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="608.5" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.93%)</title><rect x="605.5" y="595.0" width="11.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="608.5" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (9 samples, 8.41%)</title><rect x="616.5" y="691.0" width="99.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.5" y="702.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (9 samples, 8.41%)</title><rect x="616.5" y="675.0" width="99.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.5" y="686.0">org/rocksdb/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (4 samples, 3.74%)</title><rect x="616.5" y="659.0" width="44.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="619.5" y="670.0">Java..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (4 samples, 3.74%)</title><rect x="616.5" y="643.0" width="44.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="619.5" y="654.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 3.74%)</title><rect x="616.5" y="627.0" width="44.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="619.5" y="638.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 3.74%)</title><rect x="616.5" y="611.0" width="44.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="619.5" y="622.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 3.74%)</title><rect x="616.5" y="595.0" width="44.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="619.5" y="606.0">rock..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.93%)</title><rect x="616.5" y="579.0" width="11.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="619.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 1.87%)</title><rect x="627.6" y="579.0" width="22.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="630.6" y="590.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 1.87%)</title><rect x="627.6" y="563.0" width="22.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="630.6" y="574.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 1.87%)</title><rect x="627.6" y="547.0" width="22.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="630.6" y="558.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 1.87%)</title><rect x="627.6" y="531.0" width="22.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="630.6" y="542.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.93%)</title><rect x="638.6" y="515.0" width="11.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="641.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.93%)</title><rect x="638.6" y="499.0" width="11.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="641.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.93%)</title><rect x="638.6" y="483.0" width="11.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="641.6" y="494.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.93%)</title><rect x="638.6" y="467.0" width="11.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="641.6" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17197499110732040112.so (1 samples, 0.93%)</title><rect x="638.6" y="451.0" width="11.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="641.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.93%)</title><rect x="649.6" y="579.0" width="11.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="652.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 4.67%)</title><rect x="660.7" y="659.0" width="55.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="663.7" y="670.0">[unkn..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.93%)</title><rect x="660.7" y="643.0" width="11.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="663.7" y="654.0"></text>
</g>
<g>
<title>__write (4 samples, 3.74%)</title><rect x="671.7" y="643.0" width="44.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="674.7" y="654.0">__wr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 2.80%)</title><rect x="682.7" y="627.0" width="33.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="685.7" y="638.0">en..</text>
</g>
<g>
<title>do_syscall_64 (3 samples, 2.80%)</title><rect x="682.7" y="611.0" width="33.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="685.7" y="622.0">do..</text>
</g>
<g>
<title>__x64_sys_write (3 samples, 2.80%)</title><rect x="682.7" y="595.0" width="33.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="685.7" y="606.0">__..</text>
</g>
<g>
<title>ksys_write (3 samples, 2.80%)</title><rect x="682.7" y="579.0" width="33.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="685.7" y="590.0">ks..</text>
</g>
<g>
<title>vfs_write (3 samples, 2.80%)</title><rect x="682.7" y="563.0" width="33.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="685.7" y="574.0">vf..</text>
</g>
<g>
<title>__vfs_write (2 samples, 1.87%)</title><rect x="682.7" y="547.0" width="22.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="685.7" y="558.0">_..</text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.93%)</title><rect x="682.7" y="531.0" width="11.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="685.7" y="542.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.93%)</title><rect x="693.7" y="531.0" width="11.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="696.7" y="542.0"></text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.93%)</title><rect x="693.7" y="515.0" width="11.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="696.7" y="526.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.93%)</title><rect x="693.7" y="499.0" width="11.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="696.7" y="510.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.93%)</title><rect x="693.7" y="483.0" width="11.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="696.7" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.93%)</title><rect x="693.7" y="467.0" width="11.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="696.7" y="478.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.93%)</title><rect x="693.7" y="451.0" width="11.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="696.7" y="462.0"></text>
</g>
<g>
<title>__generic_write_end (1 samples, 0.93%)</title><rect x="693.7" y="435.0" width="11.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="696.7" y="446.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.93%)</title><rect x="693.7" y="419.0" width="11.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="696.7" y="430.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.93%)</title><rect x="693.7" y="403.0" width="11.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="696.7" y="414.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.93%)</title><rect x="693.7" y="387.0" width="11.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="696.7" y="398.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.93%)</title><rect x="693.7" y="371.0" width="11.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="696.7" y="382.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.93%)</title><rect x="693.7" y="355.0" width="11.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="696.7" y="366.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.93%)</title><rect x="704.8" y="547.0" width="11.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="707.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.sendResponse (19 samples, 17.76%)</title><rect x="715.8" y="723.0" width="209.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.8" y="734.0">ru/mail/polis/service/Custo..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 17.76%)</title><rect x="715.8" y="707.0" width="209.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.8" y="718.0">one/nio/http/HttpSession.se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 17.76%)</title><rect x="715.8" y="691.0" width="209.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.8" y="702.0">one/nio/http/HttpSession.wr..</text>
</g>
<g>
<title>one/nio/net/Session.write (19 samples, 17.76%)</title><rect x="715.8" y="675.0" width="209.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="718.8" y="686.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (19 samples, 17.76%)</title><rect x="715.8" y="659.0" width="209.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.8" y="670.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (19 samples, 17.76%)</title><rect x="715.8" y="643.0" width="209.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.8" y="654.0">one/nio/net/Session$ArrayQu..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (19 samples, 17.76%)</title><rect x="715.8" y="627.0" width="209.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.8" y="638.0">one/nio/net/NativeSocket.wr..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.93%)</title><rect x="715.8" y="611.0" width="11.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="718.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.93%)</title><rect x="715.8" y="595.0" width="11.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="718.8" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.93%)</title><rect x="715.8" y="579.0" width="11.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="718.8" y="590.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.93%)</title><rect x="715.8" y="563.0" width="11.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="718.8" y="574.0"></text>
</g>
<g>
<title>__send (18 samples, 16.82%)</title><rect x="726.8" y="611.0" width="198.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="729.8" y="622.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 15.89%)</title><rect x="737.9" y="595.0" width="187.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="740.9" y="606.0">entry_SYSCALL_64_after_h..</text>
</g>
<g>
<title>do_syscall_64 (17 samples, 15.89%)</title><rect x="737.9" y="579.0" width="187.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="740.9" y="590.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (17 samples, 15.89%)</title><rect x="737.9" y="563.0" width="187.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="740.9" y="574.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (16 samples, 14.95%)</title><rect x="737.9" y="547.0" width="176.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="740.9" y="558.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (16 samples, 14.95%)</title><rect x="737.9" y="531.0" width="176.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="740.9" y="542.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (16 samples, 14.95%)</title><rect x="737.9" y="515.0" width="176.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="740.9" y="526.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (16 samples, 14.95%)</title><rect x="737.9" y="499.0" width="176.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="740.9" y="510.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.93%)</title><rect x="737.9" y="483.0" width="11.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="740.9" y="494.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (15 samples, 14.02%)</title><rect x="748.9" y="483.0" width="165.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="751.9" y="494.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 1.87%)</title><rect x="748.9" y="467.0" width="22.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="751.9" y="478.0">s..</text>
</g>
<g>
<title>__alloc_skb (2 samples, 1.87%)</title><rect x="748.9" y="451.0" width="22.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="751.9" y="462.0">_..</text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.93%)</title><rect x="748.9" y="435.0" width="11.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="751.9" y="446.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.93%)</title><rect x="759.9" y="435.0" width="11.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="762.9" y="446.0"></text>
</g>
<g>
<title>tcp_push (13 samples, 12.15%)</title><rect x="770.9" y="467.0" width="143.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="773.9" y="478.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (13 samples, 12.15%)</title><rect x="770.9" y="451.0" width="143.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="773.9" y="462.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_write_xmit (13 samples, 12.15%)</title><rect x="770.9" y="435.0" width="143.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="773.9" y="446.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (12 samples, 11.21%)</title><rect x="770.9" y="419.0" width="132.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="773.9" y="430.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (12 samples, 11.21%)</title><rect x="770.9" y="403.0" width="132.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="773.9" y="414.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (12 samples, 11.21%)</title><rect x="770.9" y="387.0" width="132.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="773.9" y="398.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (12 samples, 11.21%)</title><rect x="770.9" y="371.0" width="132.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="773.9" y="382.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (5 samples, 4.67%)</title><rect x="770.9" y="355.0" width="55.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="773.9" y="366.0">__ip_..</text>
</g>
<g>
<title>ip_send_check (1 samples, 0.93%)</title><rect x="770.9" y="339.0" width="11.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="773.9" y="350.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.93%)</title><rect x="782.0" y="339.0" width="11.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="785.0" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 2.80%)</title><rect x="793.0" y="339.0" width="33.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="796.0" y="350.0">nf..</text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (3 samples, 2.80%)</title><rect x="793.0" y="323.0" width="33.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="796.0" y="334.0">ip..</text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 2.80%)</title><rect x="793.0" y="307.0" width="33.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="796.0" y="318.0">nf..</text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (3 samples, 2.80%)</title><rect x="793.0" y="291.0" width="33.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="796.0" y="302.0">tc..</text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (1 samples, 0.93%)</title><rect x="815.0" y="275.0" width="11.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="818.0" y="286.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (1 samples, 0.93%)</title><rect x="815.0" y="259.0" width="11.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="818.0" y="270.0"></text>
</g>
<g>
<title>ip_output (7 samples, 6.54%)</title><rect x="826.1" y="355.0" width="77.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="829.1" y="366.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (7 samples, 6.54%)</title><rect x="826.1" y="339.0" width="77.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="829.1" y="350.0">ip_finish..</text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 6.54%)</title><rect x="826.1" y="323.0" width="77.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="829.1" y="334.0">ip_finish..</text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 5.61%)</title><rect x="826.1" y="307.0" width="66.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="829.1" y="318.0">__local..</text>
</g>
<g>
<title>do_softirq.part.20 (6 samples, 5.61%)</title><rect x="826.1" y="291.0" width="66.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="829.1" y="302.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 5.61%)</title><rect x="826.1" y="275.0" width="66.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="829.1" y="286.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 5.61%)</title><rect x="826.1" y="259.0" width="66.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="829.1" y="270.0">__softi..</text>
</g>
<g>
<title>net_rx_action (6 samples, 5.61%)</title><rect x="826.1" y="243.0" width="66.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="829.1" y="254.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (6 samples, 5.61%)</title><rect x="826.1" y="227.0" width="66.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="829.1" y="238.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (6 samples, 5.61%)</title><rect x="826.1" y="211.0" width="66.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="829.1" y="222.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (6 samples, 5.61%)</title><rect x="826.1" y="195.0" width="66.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="829.1" y="206.0">__netif..</text>
</g>
<g>
<title>ip_rcv (6 samples, 5.61%)</title><rect x="826.1" y="179.0" width="66.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="829.1" y="190.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 4.67%)</title><rect x="837.1" y="163.0" width="55.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="840.1" y="174.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (5 samples, 4.67%)</title><rect x="837.1" y="147.0" width="55.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="840.1" y="158.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 4.67%)</title><rect x="837.1" y="131.0" width="55.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="840.1" y="142.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 4.67%)</title><rect x="837.1" y="115.0" width="55.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="840.1" y="126.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 4.67%)</title><rect x="837.1" y="99.0" width="55.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="840.1" y="110.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.93%)</title><rect x="848.1" y="83.0" width="11.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="851.1" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 2.80%)</title><rect x="859.2" y="83.0" width="33.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="862.2" y="94.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.93%)</title><rect x="859.2" y="67.0" width="11.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="862.2" y="78.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 1.87%)</title><rect x="870.2" y="67.0" width="22.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="873.2" y="78.0">t..</text>
</g>
<g>
<title>tcp_ack (2 samples, 1.87%)</title><rect x="870.2" y="51.0" width="22.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="873.2" y="62.0">t..</text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.93%)</title><rect x="870.2" y="35.0" width="11.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="873.2" y="46.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.93%)</title><rect x="881.2" y="35.0" width="11.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="884.2" y="46.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.93%)</title><rect x="892.2" y="307.0" width="11.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="895.2" y="318.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.93%)</title><rect x="892.2" y="291.0" width="11.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="895.2" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.93%)</title><rect x="892.2" y="275.0" width="11.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="895.2" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.93%)</title><rect x="892.2" y="259.0" width="11.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="895.2" y="270.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.93%)</title><rect x="892.2" y="243.0" width="11.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="895.2" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.93%)</title><rect x="892.2" y="227.0" width="11.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="895.2" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.93%)</title><rect x="892.2" y="211.0" width="11.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="895.2" y="222.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.93%)</title><rect x="903.3" y="419.0" width="11.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="906.3" y="430.0"></text>
</g>
<g>
<title>read_hv_clock_tsc (1 samples, 0.93%)</title><rect x="903.3" y="403.0" width="11.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="906.3" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.93%)</title><rect x="914.3" y="547.0" width="11.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="917.3" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (24 samples, 22.43%)</title><rect x="925.3" y="819.0" width="264.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.3" y="830.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 2.80%)</title><rect x="925.3" y="803.0" width="33.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.3" y="814.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 2.80%)</title><rect x="925.3" y="787.0" width="33.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.3" y="798.0">on..</text>
</g>
<g>
<title>[unknown] (3 samples, 2.80%)</title><rect x="925.3" y="771.0" width="33.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="928.3" y="782.0">[u..</text>
</g>
<g>
<title>epoll_wait (3 samples, 2.80%)</title><rect x="925.3" y="755.0" width="33.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="928.3" y="766.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 2.80%)</title><rect x="925.3" y="739.0" width="33.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="928.3" y="750.0">en..</text>
</g>
<g>
<title>do_syscall_64 (3 samples, 2.80%)</title><rect x="925.3" y="723.0" width="33.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="928.3" y="734.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 2.80%)</title><rect x="925.3" y="707.0" width="33.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="928.3" y="718.0">__..</text>
</g>
<g>
<title>do_epoll_wait (3 samples, 2.80%)</title><rect x="925.3" y="691.0" width="33.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="928.3" y="702.0">do..</text>
</g>
<g>
<title>ep_poll (3 samples, 2.80%)</title><rect x="925.3" y="675.0" width="33.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="928.3" y="686.0">ep..</text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 2.80%)</title><rect x="925.3" y="659.0" width="33.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="928.3" y="670.0">sc..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 2.80%)</title><rect x="925.3" y="643.0" width="33.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="928.3" y="654.0">sc..</text>
</g>
<g>
<title>schedule (3 samples, 2.80%)</title><rect x="925.3" y="627.0" width="33.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.3" y="638.0">sc..</text>
</g>
<g>
<title>__schedule (3 samples, 2.80%)</title><rect x="925.3" y="611.0" width="33.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="928.3" y="622.0">__..</text>
</g>
<g>
<title>finish_task_switch (2 samples, 1.87%)</title><rect x="936.4" y="595.0" width="22.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="939.4" y="606.0">f..</text>
</g>
<g>
<title>one/nio/net/Session.process (21 samples, 19.63%)</title><rect x="958.4" y="803.0" width="231.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="961.4" y="814.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (21 samples, 19.63%)</title><rect x="958.4" y="787.0" width="231.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.4" y="798.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14 samples, 13.08%)</title><rect x="958.4" y="771.0" width="154.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="961.4" y="782.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (10 samples, 9.35%)</title><rect x="969.4" y="755.0" width="110.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="972.4" y="766.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (10 samples, 9.35%)</title><rect x="969.4" y="739.0" width="110.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.4" y="750.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (10 samples, 9.35%)</title><rect x="969.4" y="723.0" width="110.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.4" y="734.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.93%)</title><rect x="969.4" y="707.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="972.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.entity (9 samples, 8.41%)</title><rect x="980.5" y="707.0" width="99.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.5" y="718.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (9 samples, 8.41%)</title><rect x="980.5" y="691.0" width="99.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.5" y="702.0">one/nio/serv..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 8.41%)</title><rect x="980.5" y="675.0" width="99.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.5" y="686.0">java/util/co..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (9 samples, 8.41%)</title><rect x="980.5" y="659.0" width="99.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="983.5" y="670.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (9 samples, 8.41%)</title><rect x="980.5" y="643.0" width="99.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.5" y="654.0">one/nio/serv..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (9 samples, 8.41%)</title><rect x="980.5" y="627.0" width="99.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.5" y="638.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (9 samples, 8.41%)</title><rect x="980.5" y="611.0" width="99.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.5" y="622.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (8 samples, 7.48%)</title><rect x="980.5" y="595.0" width="88.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.5" y="606.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 7.48%)</title><rect x="980.5" y="579.0" width="88.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="983.5" y="590.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 7.48%)</title><rect x="980.5" y="563.0" width="88.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.5" y="574.0">jdk/intern..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.93%)</title><rect x="980.5" y="547.0" width="11.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="983.5" y="558.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 1.87%)</title><rect x="991.5" y="547.0" width="22.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="994.5" y="558.0">U..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.93%)</title><rect x="991.5" y="531.0" width="11.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="994.5" y="542.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.93%)</title><rect x="1002.5" y="531.0" width="11.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1005.5" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 4.67%)</title><rect x="1013.6" y="547.0" width="55.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1016.6" y="558.0">pthre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 4.67%)</title><rect x="1013.6" y="531.0" width="55.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1016.6" y="542.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (5 samples, 4.67%)</title><rect x="1013.6" y="515.0" width="55.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1016.6" y="526.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 4.67%)</title><rect x="1013.6" y="499.0" width="55.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1016.6" y="510.0">__x64..</text>
</g>
<g>
<title>do_futex (5 samples, 4.67%)</title><rect x="1013.6" y="483.0" width="55.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1016.6" y="494.0">do_fu..</text>
</g>
<g>
<title>futex_wake (5 samples, 4.67%)</title><rect x="1013.6" y="467.0" width="55.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1016.6" y="478.0">futex..</text>
</g>
<g>
<title>wake_up_q (4 samples, 3.74%)</title><rect x="1024.6" y="451.0" width="44.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1027.6" y="462.0">wake..</text>
</g>
<g>
<title>try_to_wake_up (4 samples, 3.74%)</title><rect x="1024.6" y="435.0" width="44.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1027.6" y="446.0">try_..</text>
</g>
<g>
<title>__lock_text_start (4 samples, 3.74%)</title><rect x="1024.6" y="419.0" width="44.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1027.6" y="430.0">__lo..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.93%)</title><rect x="1068.7" y="595.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (1 samples, 0.93%)</title><rect x="1068.7" y="579.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.93%)</title><rect x="1079.7" y="755.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1082.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.93%)</title><rect x="1079.7" y="739.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.87%)</title><rect x="1090.7" y="755.0" width="22.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.7" y="766.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.87%)</title><rect x="1090.7" y="739.0" width="22.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.7" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 6.54%)</title><rect x="1112.8" y="771.0" width="77.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.8" y="782.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 6.54%)</title><rect x="1112.8" y="755.0" width="77.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.8" y="766.0">one/nio/n..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.93%)</title><rect x="1134.9" y="739.0" width="11.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1137.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.93%)</title><rect x="1134.9" y="723.0" width="11.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1137.9" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.93%)</title><rect x="1134.9" y="707.0" width="11.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1137.9" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.93%)</title><rect x="1134.9" y="691.0" width="11.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1137.9" y="702.0"></text>
</g>
<g>
<title>recv (4 samples, 3.74%)</title><rect x="1145.9" y="739.0" width="44.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1148.9" y="750.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 3.74%)</title><rect x="1145.9" y="723.0" width="44.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1148.9" y="734.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.93%)</title><rect x="1145.9" y="707.0" width="11.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1148.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 2.80%)</title><rect x="1156.9" y="707.0" width="33.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1159.9" y="718.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 1.87%)</title><rect x="1167.9" y="691.0" width="22.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1170.9" y="702.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 1.87%)</title><rect x="1167.9" y="675.0" width="22.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1170.9" y="686.0">_..</text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.93%)</title><rect x="1167.9" y="659.0" width="11.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1170.9" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.93%)</title><rect x="1167.9" y="643.0" width="11.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1170.9" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.93%)</title><rect x="1167.9" y="627.0" width="11.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1170.9" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.93%)</title><rect x="1167.9" y="611.0" width="11.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1170.9" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.93%)</title><rect x="1167.9" y="595.0" width="11.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1170.9" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.93%)</title><rect x="1179.0" y="659.0" width="11.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1182.0" y="670.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.93%)</title><rect x="1179.0" y="643.0" width="11.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1182.0" y="654.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.93%)</title><rect x="1179.0" y="627.0" width="11.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1182.0" y="638.0"></text>
</g>
</g>
</svg>
