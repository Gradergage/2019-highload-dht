<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (299 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=36616] (299 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="926.0">[NIO Selector #0 tid=36616]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (299 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (47 samples, 15.72%)</title><rect x="13.9" y="883.0" width="185.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.9" y="894.0">one/nio/net/NativeSelect..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (47 samples, 15.72%)</title><rect x="13.9" y="867.0" width="185.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.9" y="878.0">one/nio/net/NativeSelect..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.67%)</title><rect x="17.9" y="851.0" width="7.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="20.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 14.72%)</title><rect x="25.8" y="851.0" width="173.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="28.8" y="862.0">[unknown]</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.33%)</title><rect x="25.8" y="835.0" width="3.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="28.8" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.33%)</title><rect x="25.8" y="819.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="28.8" y="830.0"></text>
</g>
<g>
<title>epoll_wait (43 samples, 14.38%)</title><rect x="29.7" y="835.0" width="169.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="32.7" y="846.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 12.37%)</title><rect x="53.4" y="819.0" width="146.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="56.4" y="830.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>do_syscall_64 (37 samples, 12.37%)</title><rect x="53.4" y="803.0" width="146.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="56.4" y="814.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (34 samples, 11.37%)</title><rect x="65.3" y="787.0" width="134.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="68.3" y="798.0">__x64_sys_epoll_w..</text>
</g>
<g>
<title>do_epoll_wait (34 samples, 11.37%)</title><rect x="65.3" y="771.0" width="134.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="68.3" y="782.0">do_epoll_wait</text>
</g>
<g>
<title>ep_poll (34 samples, 11.37%)</title><rect x="65.3" y="755.0" width="134.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="68.3" y="766.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (11 samples, 3.68%)</title><rect x="81.0" y="739.0" width="43.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="84.0" y="750.0">ep_s..</text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 2.01%)</title><rect x="100.8" y="723.0" width="23.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="103.8" y="734.0">e..</text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 1.00%)</title><rect x="112.6" y="707.0" width="11.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="115.6" y="718.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.33%)</title><rect x="120.5" y="691.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="123.5" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (19 samples, 6.35%)</title><rect x="124.4" y="739.0" width="75.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="127.4" y="750.0">schedule..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (19 samples, 6.35%)</title><rect x="124.4" y="723.0" width="75.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="127.4" y="734.0">schedule..</text>
</g>
<g>
<title>schedule (19 samples, 6.35%)</title><rect x="124.4" y="707.0" width="75.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="127.4" y="718.0">schedule</text>
</g>
<g>
<title>__schedule (19 samples, 6.35%)</title><rect x="124.4" y="691.0" width="75.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="127.4" y="702.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (18 samples, 6.02%)</title><rect x="128.4" y="675.0" width="71.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="131.4" y="686.0">finish_t..</text>
</g>
<g>
<title>one/nio/net/Session.process (251 samples, 83.95%)</title><rect x="199.4" y="883.0" width="990.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.4" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (251 samples, 83.95%)</title><rect x="199.4" y="867.0" width="990.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.4" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (206 samples, 68.90%)</title><rect x="199.4" y="851.0" width="813.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.4" y="862.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (195 samples, 65.22%)</title><rect x="215.2" y="835.0" width="769.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.2" y="846.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>java/util/LinkedList.addLast (1 samples, 0.33%)</title><rect x="219.2" y="819.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (193 samples, 64.55%)</title><rect x="223.1" y="819.0" width="761.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.1" y="830.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (192 samples, 64.21%)</title><rect x="223.1" y="803.0" width="757.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="226.1" y="814.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (151 samples, 50.50%)</title><rect x="223.1" y="787.0" width="595.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.1" y="798.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (151 samples, 50.50%)</title><rect x="223.1" y="771.0" width="595.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.1" y="782.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.67%)</title><rect x="223.1" y="755.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.33%)</title><rect x="227.1" y="739.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.33%)</title><rect x="227.1" y="723.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.33%)</title><rect x="227.1" y="707.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (149 samples, 49.83%)</title><rect x="231.0" y="755.0" width="588.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.0" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.33%)</title><rect x="231.0" y="739.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="234.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (148 samples, 49.50%)</title><rect x="234.9" y="739.0" width="584.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.9" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (148 samples, 49.50%)</title><rect x="234.9" y="723.0" width="584.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.9" y="734.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.33%)</title><rect x="234.9" y="707.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (147 samples, 49.16%)</title><rect x="238.9" y="707.0" width="580.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.9" y="718.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="242.8" y="691.0" width="4.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="245.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.33%)</title><rect x="242.8" y="675.0" width="4.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="245.8" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.33%)</title><rect x="242.8" y="659.0" width="4.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="245.8" y="670.0"></text>
</g>
<g>
<title>__send (145 samples, 48.49%)</title><rect x="246.8" y="691.0" width="572.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="249.8" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (138 samples, 46.15%)</title><rect x="274.4" y="675.0" width="544.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="277.4" y="686.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.33%)</title><rect x="274.4" y="659.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="277.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (137 samples, 45.82%)</title><rect x="278.4" y="659.0" width="540.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="281.4" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (133 samples, 44.48%)</title><rect x="294.1" y="643.0" width="524.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="297.1" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (133 samples, 44.48%)</title><rect x="294.1" y="627.0" width="524.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="297.1" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (132 samples, 44.15%)</title><rect x="298.1" y="611.0" width="520.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="301.1" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (129 samples, 43.14%)</title><rect x="298.1" y="595.0" width="509.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="301.1" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (129 samples, 43.14%)</title><rect x="298.1" y="579.0" width="509.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="301.1" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.33%)</title><rect x="302.0" y="563.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="305.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (126 samples, 42.14%)</title><rect x="306.0" y="563.0" width="497.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="309.0" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 1.34%)</title><rect x="313.9" y="547.0" width="15.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="316.9" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 1.34%)</title><rect x="313.9" y="531.0" width="15.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="316.9" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.67%)</title><rect x="317.8" y="515.0" width="7.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="320.8" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.33%)</title><rect x="317.8" y="499.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="320.8" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.33%)</title><rect x="317.8" y="483.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="320.8" y="494.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.33%)</title><rect x="321.8" y="499.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="324.8" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.33%)</title><rect x="325.7" y="515.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.7" y="526.0"></text>
</g>
<g>
<title>tcp_push (117 samples, 39.13%)</title><rect x="329.7" y="547.0" width="461.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="332.7" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (117 samples, 39.13%)</title><rect x="329.7" y="531.0" width="461.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="332.7" y="542.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (117 samples, 39.13%)</title><rect x="329.7" y="515.0" width="461.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="332.7" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (111 samples, 37.12%)</title><rect x="337.6" y="499.0" width="438.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="340.6" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (109 samples, 36.45%)</title><rect x="341.5" y="483.0" width="430.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="344.5" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (109 samples, 36.45%)</title><rect x="341.5" y="467.0" width="430.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="344.5" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (109 samples, 36.45%)</title><rect x="341.5" y="451.0" width="430.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="344.5" y="462.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (10 samples, 3.34%)</title><rect x="341.5" y="435.0" width="39.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="344.5" y="446.0">__i..</text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.67%)</title><rect x="341.5" y="419.0" width="7.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="344.5" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 2.68%)</title><rect x="349.4" y="419.0" width="31.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="352.4" y="430.0">nf..</text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.33%)</title><rect x="349.4" y="403.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="352.4" y="414.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.33%)</title><rect x="349.4" y="387.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="352.4" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (6 samples, 2.01%)</title><rect x="353.3" y="403.0" width="23.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="356.3" y="414.0">i..</text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 2.01%)</title><rect x="353.3" y="387.0" width="23.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="356.3" y="398.0">n..</text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (1 samples, 0.33%)</title><rect x="357.3" y="371.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="360.3" y="382.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (1 samples, 0.33%)</title><rect x="361.2" y="371.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="364.2" y="382.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (3 samples, 1.00%)</title><rect x="365.2" y="371.0" width="11.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="368.2" y="382.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (2 samples, 0.67%)</title><rect x="369.1" y="355.0" width="7.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="372.1" y="366.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (1 samples, 0.33%)</title><rect x="373.1" y="339.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="376.1" y="350.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (1 samples, 0.33%)</title><rect x="377.0" y="403.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="380.0" y="414.0"></text>
</g>
<g>
<title>ip_output (99 samples, 33.11%)</title><rect x="381.0" y="435.0" width="390.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="384.0" y="446.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.33%)</title><rect x="384.9" y="419.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="387.9" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (97 samples, 32.44%)</title><rect x="388.9" y="419.0" width="382.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="391.9" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.33%)</title><rect x="404.6" y="403.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="407.6" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (92 samples, 30.77%)</title><rect x="408.6" y="403.0" width="363.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="411.6" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (84 samples, 28.09%)</title><rect x="412.5" y="387.0" width="331.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="415.5" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (84 samples, 28.09%)</title><rect x="412.5" y="371.0" width="331.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="415.5" y="382.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (84 samples, 28.09%)</title><rect x="412.5" y="355.0" width="331.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="415.5" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (83 samples, 27.76%)</title><rect x="412.5" y="339.0" width="327.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="415.5" y="350.0">__softirqentry_text_start</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.67%)</title><rect x="412.5" y="323.0" width="7.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="415.5" y="334.0"></text>
</g>
<g>
<title>net_rx_action (81 samples, 27.09%)</title><rect x="420.4" y="323.0" width="319.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="423.4" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (81 samples, 27.09%)</title><rect x="420.4" y="307.0" width="319.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="423.4" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (79 samples, 26.42%)</title><rect x="428.3" y="291.0" width="311.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="431.3" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (79 samples, 26.42%)</title><rect x="428.3" y="275.0" width="311.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="431.3" y="286.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>ip_rcv (79 samples, 26.42%)</title><rect x="428.3" y="259.0" width="311.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="431.3" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (1 samples, 0.33%)</title><rect x="432.3" y="243.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="435.3" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (74 samples, 24.75%)</title><rect x="436.2" y="243.0" width="292.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="439.2" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (74 samples, 24.75%)</title><rect x="436.2" y="227.0" width="292.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="439.2" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (73 samples, 24.41%)</title><rect x="440.2" y="211.0" width="288.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="443.2" y="222.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (72 samples, 24.08%)</title><rect x="440.2" y="195.0" width="284.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="443.2" y="206.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.33%)</title><rect x="444.1" y="179.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="447.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (70 samples, 23.41%)</title><rect x="448.1" y="179.0" width="276.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="451.1" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.67%)</title><rect x="452.0" y="163.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="455.0" y="174.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (2 samples, 0.67%)</title><rect x="459.9" y="163.0" width="7.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="462.9" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.33%)</title><rect x="467.8" y="163.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="470.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (64 samples, 21.40%)</title><rect x="471.7" y="163.0" width="252.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="474.7" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (63 samples, 21.07%)</title><rect x="475.7" y="147.0" width="248.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="478.7" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.33%)</title><rect x="475.7" y="131.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="478.7" y="142.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.33%)</title><rect x="479.6" y="131.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="482.6" y="142.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 2.34%)</title><rect x="483.6" y="131.0" width="27.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="486.6" y="142.0">t..</text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.33%)</title><rect x="483.6" y="115.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="486.6" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 2.01%)</title><rect x="487.5" y="115.0" width="23.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="490.5" y="126.0">t..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 1.00%)</title><rect x="495.4" y="99.0" width="11.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="498.4" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.33%)</title><rect x="495.4" y="83.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="498.4" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.67%)</title><rect x="499.4" y="83.0" width="7.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="502.4" y="94.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.67%)</title><rect x="499.4" y="67.0" width="7.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="502.4" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.33%)</title><rect x="503.3" y="51.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="506.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.33%)</title><rect x="503.3" y="35.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="506.3" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.33%)</title><rect x="507.3" y="99.0" width="3.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="510.3" y="110.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.33%)</title><rect x="511.2" y="131.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="514.2" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (52 samples, 17.39%)</title><rect x="515.2" y="131.0" width="205.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="518.2" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.33%)</title><rect x="523.0" y="115.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="526.0" y="126.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.33%)</title><rect x="527.0" y="115.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="530.0" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (46 samples, 15.38%)</title><rect x="530.9" y="115.0" width="181.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="533.9" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (46 samples, 15.38%)</title><rect x="530.9" y="99.0" width="181.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="533.9" y="110.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (46 samples, 15.38%)</title><rect x="530.9" y="83.0" width="181.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="533.9" y="94.0">__wake_up_common_lock</text>
</g>
<g>
<title>__lock_text_start (46 samples, 15.38%)</title><rect x="530.9" y="67.0" width="181.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="533.9" y="78.0">__lock_text_start</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.33%)</title><rect x="712.5" y="115.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.5" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.33%)</title><rect x="716.4" y="115.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="719.4" y="126.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.33%)</title><rect x="720.4" y="131.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="723.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.33%)</title><rect x="724.3" y="195.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="727.3" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.33%)</title><rect x="728.3" y="243.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="731.3" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.67%)</title><rect x="732.2" y="243.0" width="7.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="735.2" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (2 samples, 0.67%)</title><rect x="732.2" y="227.0" width="7.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="735.2" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (2 samples, 0.67%)</title><rect x="732.2" y="211.0" width="7.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="735.2" y="222.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.33%)</title><rect x="740.1" y="339.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="743.1" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 2.34%)</title><rect x="744.0" y="387.0" width="27.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="747.0" y="398.0">d..</text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 2.01%)</title><rect x="744.0" y="371.0" width="23.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="747.0" y="382.0">_..</text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 1.00%)</title><rect x="748.0" y="355.0" width="11.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="751.0" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.67%)</title><rect x="748.0" y="339.0" width="7.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="751.0" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.33%)</title><rect x="748.0" y="323.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="751.0" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.33%)</title><rect x="748.0" y="307.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="751.0" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.33%)</title><rect x="748.0" y="291.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="751.0" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.33%)</title><rect x="751.9" y="323.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="754.9" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.33%)</title><rect x="755.9" y="339.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="758.9" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.67%)</title><rect x="759.8" y="355.0" width="7.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="762.8" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.33%)</title><rect x="763.8" y="339.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="766.8" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.33%)</title><rect x="767.7" y="371.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="770.7" y="382.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.33%)</title><rect x="771.7" y="483.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="774.7" y="494.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.33%)</title><rect x="775.6" y="499.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="778.6" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.33%)</title><rect x="779.6" y="499.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="782.6" y="510.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.33%)</title><rect x="783.5" y="499.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="786.5" y="510.0"></text>
</g>
<g>
<title>read_hv_clock_tsc (1 samples, 0.33%)</title><rect x="783.5" y="483.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="786.5" y="494.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.33%)</title><rect x="787.5" y="499.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="790.5" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 1.00%)</title><rect x="791.4" y="547.0" width="11.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="794.4" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.67%)</title><rect x="795.4" y="531.0" width="7.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="798.4" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.33%)</title><rect x="803.2" y="563.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="806.2" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 1.00%)</title><rect x="807.2" y="595.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="810.2" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 1.00%)</title><rect x="807.2" y="579.0" width="11.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="810.2" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 1.00%)</title><rect x="807.2" y="563.0" width="11.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="810.2" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.67%)</title><rect x="811.1" y="547.0" width="7.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="814.1" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.33%)</title><rect x="815.1" y="531.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="818.1" y="542.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.33%)</title><rect x="815.1" y="515.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="818.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 1.67%)</title><rect x="819.0" y="787.0" width="19.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.67%)</title><rect x="830.9" y="771.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="833.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.33%)</title><rect x="834.8" y="755.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="837.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.33%)</title><rect x="834.8" y="739.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.33%)</title><rect x="834.8" y="723.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.entity (36 samples, 12.04%)</title><rect x="838.8" y="787.0" width="142.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.8" y="798.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.33%)</title><rect x="842.7" y="771.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.33%)</title><rect x="842.7" y="755.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="845.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.33%)</title><rect x="842.7" y="739.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.7" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.33%)</title><rect x="842.7" y="723.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.7" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.33%)</title><rect x="842.7" y="707.0" width="4.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="845.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImplementation.get (34 samples, 11.37%)</title><rect x="846.7" y="771.0" width="134.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.7" y="782.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (32 samples, 10.70%)</title><rect x="850.6" y="755.0" width="126.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.6" y="766.0">org/rocksdb/Rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (31 samples, 10.37%)</title><rect x="854.5" y="739.0" width="122.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.5" y="750.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (29 samples, 9.70%)</title><rect x="854.5" y="723.0" width="114.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="857.5" y="734.0">Java_org_rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.33%)</title><rect x="854.5" y="707.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="857.5" y="718.0"></text>
</g>
<g>
<title>free (2 samples, 0.67%)</title><rect x="858.5" y="707.0" width="7.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="861.5" y="718.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.33%)</title><rect x="866.4" y="707.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="869.4" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.33%)</title><rect x="870.3" y="707.0" width="4.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="873.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.33%)</title><rect x="874.3" y="707.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="877.3" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (23 samples, 7.69%)</title><rect x="878.2" y="707.0" width="90.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="881.2" y="718.0">rocksdb_ge..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.33%)</title><rect x="882.2" y="691.0" width="3.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="885.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (21 samples, 7.02%)</title><rect x="886.1" y="691.0" width="82.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="889.1" y="702.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.33%)</title><rect x="886.1" y="675.0" width="4.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="889.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (20 samples, 6.69%)</title><rect x="890.1" y="675.0" width="78.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="893.1" y="686.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (19 samples, 6.35%)</title><rect x="894.0" y="659.0" width="75.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="897.0" y="670.0">rocksdb:..</text>
</g>
<g>
<title>_init (2 samples, 0.67%)</title><rect x="894.0" y="643.0" width="7.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="897.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.33%)</title><rect x="901.9" y="643.0" width="4.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="904.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (14 samples, 4.68%)</title><rect x="905.9" y="643.0" width="55.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="908.9" y="654.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni3406371977019060655.so (1 samples, 0.33%)</title><rect x="929.5" y="627.0" width="4.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="932.5" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.33%)</title><rect x="933.5" y="627.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="936.5" y="638.0"></text>
</g>
<g>
<title>hv_stimer0_callback_vector (1 samples, 0.33%)</title><rect x="933.5" y="611.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="936.5" y="622.0"></text>
</g>
<g>
<title>hv_stimer0_vector_handler (1 samples, 0.33%)</title><rect x="933.5" y="595.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="936.5" y="606.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.33%)</title><rect x="933.5" y="579.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="936.5" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.33%)</title><rect x="933.5" y="563.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="936.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.33%)</title><rect x="937.4" y="627.0" width="4.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="940.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.33%)</title><rect x="941.4" y="627.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="944.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.33%)</title><rect x="945.3" y="627.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="948.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (3 samples, 1.00%)</title><rect x="949.3" y="627.0" width="11.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="952.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.33%)</title><rect x="961.1" y="643.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="964.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (1 samples, 0.33%)</title><rect x="965.1" y="643.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="968.1" y="654.0"></text>
</g>
<g>
<title>free (1 samples, 0.33%)</title><rect x="969.0" y="723.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="972.0" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.33%)</title><rect x="972.9" y="723.0" width="4.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="975.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FastNoSuchElementException.&lt;init&gt; (1 samples, 0.33%)</title><rect x="976.9" y="755.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="979.9" y="766.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (1 samples, 0.33%)</title><rect x="976.9" y="739.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.9" y="750.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.33%)</title><rect x="976.9" y="723.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.33%)</title><rect x="976.9" y="707.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="979.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.33%)</title><rect x="976.9" y="691.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="979.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/utils/FastNoSuchElementException.fillInStackTrace (1 samples, 0.33%)</title><rect x="976.9" y="675.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleDefault (1 samples, 0.33%)</title><rect x="980.8" y="803.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="983.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.33%)</title><rect x="980.8" y="787.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 2.34%)</title><rect x="984.8" y="835.0" width="27.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.8" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 1.00%)</title><rect x="988.7" y="819.0" width="11.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 1.00%)</title><rect x="988.7" y="803.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 1.00%)</title><rect x="988.7" y="787.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="991.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 1.00%)</title><rect x="988.7" y="771.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="991.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 1.00%)</title><rect x="1000.6" y="819.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (45 samples, 15.05%)</title><rect x="1012.4" y="851.0" width="177.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1015.4" y="862.0">one/nio/net/Session.read</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.33%)</title><rect x="1020.3" y="835.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1023.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (42 samples, 14.05%)</title><rect x="1024.2" y="835.0" width="165.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1027.2" y="846.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>[unknown] (4 samples, 1.34%)</title><rect x="1028.2" y="819.0" width="15.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1031.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.34%)</title><rect x="1028.2" y="803.0" width="15.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1031.2" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.33%)</title><rect x="1028.2" y="787.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1031.2" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.67%)</title><rect x="1032.1" y="787.0" width="7.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1035.1" y="798.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.33%)</title><rect x="1032.1" y="771.0" width="4.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1035.1" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.33%)</title><rect x="1036.1" y="771.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1039.1" y="782.0"></text>
</g>
<g>
<title>recv (1 samples, 0.33%)</title><rect x="1040.0" y="787.0" width="4.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1043.0" y="798.0"></text>
</g>
<g>
<title>recv (37 samples, 12.37%)</title><rect x="1044.0" y="819.0" width="146.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1047.0" y="830.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 6.35%)</title><rect x="1115.0" y="803.0" width="75.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1118.0" y="814.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (19 samples, 6.35%)</title><rect x="1115.0" y="787.0" width="75.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1118.0" y="798.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_recvfrom (17 samples, 5.69%)</title><rect x="1122.9" y="771.0" width="67.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1125.9" y="782.0">__x64_s..</text>
</g>
<g>
<title>__sys_recvfrom (16 samples, 5.35%)</title><rect x="1122.9" y="755.0" width="63.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1125.9" y="766.0">__sys_r..</text>
</g>
<g>
<title>sock_recvmsg (15 samples, 5.02%)</title><rect x="1122.9" y="739.0" width="59.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1125.9" y="750.0">sock_r..</text>
</g>
<g>
<title>inet_recvmsg (14 samples, 4.68%)</title><rect x="1122.9" y="723.0" width="55.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1125.9" y="734.0">inet_..</text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 4.68%)</title><rect x="1122.9" y="707.0" width="55.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1125.9" y="718.0">tcp_r..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.67%)</title><rect x="1134.7" y="691.0" width="7.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1137.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.67%)</title><rect x="1134.7" y="675.0" width="7.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1137.7" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.33%)</title><rect x="1134.7" y="659.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.7" y="670.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.33%)</title><rect x="1138.7" y="659.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1141.7" y="670.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.33%)</title><rect x="1142.6" y="691.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1145.6" y="702.0"></text>
</g>
<g>
<title>hv_stimer0_callback_vector (1 samples, 0.33%)</title><rect x="1142.6" y="675.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1145.6" y="686.0"></text>
</g>
<g>
<title>hv_stimer0_vector_handler (1 samples, 0.33%)</title><rect x="1142.6" y="659.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1145.6" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.33%)</title><rect x="1142.6" y="643.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1145.6" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.33%)</title><rect x="1142.6" y="627.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1145.6" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.33%)</title><rect x="1142.6" y="611.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.6" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.33%)</title><rect x="1142.6" y="595.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1145.6" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.33%)</title><rect x="1142.6" y="579.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1145.6" y="590.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 2.34%)</title><rect x="1146.6" y="691.0" width="27.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1149.6" y="702.0">s..</text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 1.34%)</title><rect x="1146.6" y="675.0" width="15.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1149.6" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.33%)</title><rect x="1150.5" y="659.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1153.5" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.67%)</title><rect x="1154.5" y="659.0" width="7.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1157.5" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.67%)</title><rect x="1154.5" y="643.0" width="7.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1157.5" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.33%)</title><rect x="1154.5" y="627.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1157.5" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.33%)</title><rect x="1158.4" y="627.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1161.4" y="638.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r9 (3 samples, 1.00%)</title><rect x="1162.4" y="675.0" width="11.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1165.4" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.33%)</title><rect x="1174.2" y="691.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1177.2" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.33%)</title><rect x="1174.2" y="675.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1177.2" y="686.0"></text>
</g>
<g>
<title>read_hv_clock_tsc (1 samples, 0.33%)</title><rect x="1174.2" y="659.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1177.2" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.33%)</title><rect x="1178.2" y="723.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1181.2" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.33%)</title><rect x="1178.2" y="707.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1181.2" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.33%)</title><rect x="1178.2" y="691.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1181.2" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.33%)</title><rect x="1178.2" y="675.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1181.2" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.33%)</title><rect x="1182.1" y="739.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.1" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.33%)</title><rect x="1186.1" y="755.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1189.1" y="766.0"></text>
</g>
</g>
</svg>
