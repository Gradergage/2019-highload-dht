<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (228 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.44%)</title><rect x="10.0" y="899.0" width="5.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.44%)</title><rect x="10.0" y="883.0" width="5.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.44%)</title><rect x="10.0" y="867.0" width="5.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.run (159 samples, 69.74%)</title><rect x="15.2" y="899.0" width="822.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.2" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (159 samples, 69.74%)</title><rect x="15.2" y="883.0" width="822.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.2" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (159 samples, 69.74%)</title><rect x="15.2" y="867.0" width="822.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.2" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (39 samples, 17.11%)</title><rect x="15.2" y="851.0" width="201.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.2" y="862.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (39 samples, 17.11%)</title><rect x="15.2" y="835.0" width="201.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.2" y="846.0">java/util/concurrent/Synch..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (38 samples, 16.67%)</title><rect x="15.2" y="819.0" width="196.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.2" y="830.0">java/util/concurrent/Synch..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (38 samples, 16.67%)</title><rect x="15.2" y="803.0" width="196.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.2" y="814.0">java/util/concurrent/Synch..</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.44%)</title><rect x="20.4" y="787.0" width="5.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="23.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (35 samples, 15.35%)</title><rect x="25.5" y="787.0" width="181.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="28.5" y="798.0">java/util/concurrent/lo..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.44%)</title><rect x="25.5" y="771.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.44%)</title><rect x="25.5" y="755.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (34 samples, 14.91%)</title><rect x="30.7" y="771.0" width="176.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.7" y="782.0">jdk/internal/misc/Unsaf..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (2 samples, 0.88%)</title><rect x="30.7" y="755.0" width="10.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="33.7" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 3.51%)</title><rect x="41.1" y="755.0" width="41.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="44.1" y="766.0">Uns..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.44%)</title><rect x="46.2" y="739.0" width="5.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="49.2" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 2.19%)</title><rect x="51.4" y="739.0" width="25.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="54.4" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.44%)</title><rect x="72.1" y="723.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="75.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.44%)</title><rect x="72.1" y="707.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="75.1" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.44%)</title><rect x="77.3" y="739.0" width="5.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="80.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (23 samples, 10.09%)</title><rect x="82.5" y="755.0" width="119.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="85.5" y="766.0">__pthread_cond_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 4.82%)</title><rect x="144.6" y="739.0" width="56.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.6" y="750.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 4.82%)</title><rect x="144.6" y="723.0" width="56.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="147.6" y="734.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 4.39%)</title><rect x="149.7" y="707.0" width="51.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="152.7" y="718.0">__x64..</text>
</g>
<g>
<title>do_futex (10 samples, 4.39%)</title><rect x="149.7" y="691.0" width="51.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="152.7" y="702.0">do_fu..</text>
</g>
<g>
<title>futex_wait (10 samples, 4.39%)</title><rect x="149.7" y="675.0" width="51.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="152.7" y="686.0">futex..</text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 3.95%)</title><rect x="154.9" y="659.0" width="46.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="157.9" y="670.0">fute..</text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.44%)</title><rect x="154.9" y="643.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="157.9" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.44%)</title><rect x="154.9" y="627.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="157.9" y="638.0"></text>
</g>
<g>
<title>schedule (8 samples, 3.51%)</title><rect x="160.1" y="643.0" width="41.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="163.1" y="654.0">sch..</text>
</g>
<g>
<title>__schedule (8 samples, 3.51%)</title><rect x="160.1" y="627.0" width="41.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="163.1" y="638.0">__s..</text>
</g>
<g>
<title>finish_task_switch (8 samples, 3.51%)</title><rect x="160.1" y="611.0" width="41.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="163.1" y="622.0">fin..</text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.44%)</title><rect x="201.5" y="755.0" width="5.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="204.5" y="766.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.44%)</title><rect x="206.7" y="787.0" width="5.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="209.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.toNanos (1 samples, 0.44%)</title><rect x="211.8" y="819.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="214.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer$$Lambda$60/455987337.run (120 samples, 52.63%)</title><rect x="217.0" y="851.0" width="621.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.0" y="862.0">ru/mail/polis/service/CustomServer$$Lambda$60/455987337.run</text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.lambda$entity$0 (119 samples, 52.19%)</title><rect x="222.2" y="835.0" width="615.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.2" y="846.0">ru/mail/polis/service/CustomServer.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.handleEntityRequest (119 samples, 52.19%)</title><rect x="222.2" y="819.0" width="615.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.2" y="830.0">ru/mail/polis/service/CustomServer.handleEntityRequest</text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.handleDelete (53 samples, 23.25%)</title><rect x="227.4" y="803.0" width="274.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.4" y="814.0">ru/mail/polis/service/CustomServer.ha..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImplementation.remove (52 samples, 22.81%)</title><rect x="232.5" y="787.0" width="269.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.5" y="798.0">ru/mail/polis/dao/DAOImplementation...</text>
</g>
<g>
<title>org/rocksdb/RocksDB.delete (52 samples, 22.81%)</title><rect x="232.5" y="771.0" width="269.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.5" y="782.0">org/rocksdb/RocksDB.delete</text>
</g>
<g>
<title>org/rocksdb/RocksDB.delete (52 samples, 22.81%)</title><rect x="232.5" y="755.0" width="269.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.5" y="766.0">org/rocksdb/RocksDB.delete</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_delete__J_3BII (35 samples, 15.35%)</title><rect x="232.5" y="739.0" width="181.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="235.5" y="750.0">Java_org_rocksdb_RocksD..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.44%)</title><rect x="232.5" y="723.0" width="5.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="235.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.44%)</title><rect x="237.7" y="723.0" width="5.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="240.7" y="734.0"></text>
</g>
<g>
<title>rocksdb_delete_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (33 samples, 14.47%)</title><rect x="242.9" y="723.0" width="170.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="245.9" y="734.0">rocksdb_delete_helper(..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.44%)</title><rect x="242.9" y="707.0" width="5.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="245.9" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.44%)</title><rect x="248.1" y="707.0" width="5.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="251.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Delete(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;) (31 samples, 13.60%)</title><rect x="253.2" y="707.0" width="160.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="256.2" y="718.0">rocksdb::DB::Delete(..</text>
</g>
<g>
<title>rocksdb::DBImpl::Delete(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;) (31 samples, 13.60%)</title><rect x="253.2" y="691.0" width="160.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="256.2" y="702.0">rocksdb::DBImpl::Del..</text>
</g>
<g>
<title>rocksdb::DB::Delete(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;) (31 samples, 13.60%)</title><rect x="253.2" y="675.0" width="160.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="256.2" y="686.0">rocksdb::DB::Delete(..</text>
</g>
<g>
<title>_init (1 samples, 0.44%)</title><rect x="258.4" y="659.0" width="5.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="261.4" y="670.0"></text>
</g>
<g>
<title>free (1 samples, 0.44%)</title><rect x="263.6" y="659.0" width="5.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="266.6" y="670.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.44%)</title><rect x="268.8" y="659.0" width="5.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="271.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (25 samples, 10.96%)</title><rect x="273.9" y="659.0" width="129.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="276.9" y="670.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.44%)</title><rect x="273.9" y="643.0" width="5.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="276.9" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.44%)</title><rect x="279.1" y="643.0" width="5.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="282.1" y="654.0"></text>
</g>
<g>
<title>_init (1 samples, 0.44%)</title><rect x="284.3" y="643.0" width="5.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="287.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (21 samples, 9.21%)</title><rect x="289.5" y="643.0" width="108.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="292.5" y="654.0">rocksdb::DBIm..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.88%)</title><rect x="310.2" y="627.0" width="10.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="313.2" y="638.0"></text>
</g>
<g>
<title>_init (1 samples, 0.44%)</title><rect x="320.5" y="627.0" width="5.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="323.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 1.32%)</title><rect x="325.7" y="627.0" width="15.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="328.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 1.32%)</title><rect x="325.7" y="611.0" width="15.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="328.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 1.32%)</title><rect x="325.7" y="595.0" width="15.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="328.7" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17197499110732040112.so (1 samples, 0.44%)</title><rect x="325.7" y="579.0" width="5.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="328.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.88%)</title><rect x="330.9" y="579.0" width="10.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="333.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.44%)</title><rect x="330.9" y="563.0" width="5.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="333.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.44%)</title><rect x="336.1" y="563.0" width="5.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="339.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.44%)</title><rect x="341.2" y="627.0" width="5.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="344.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 3.95%)</title><rect x="346.4" y="627.0" width="46.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="349.4" y="638.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::DeleteCF(unsigned int, rocksdb::Slice const&amp;) (1 samples, 0.44%)</title><rect x="346.4" y="611.0" width="5.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="349.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (8 samples, 3.51%)</title><rect x="351.6" y="611.0" width="41.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="354.6" y="622.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::DeleteCF(unsigned int, rocksdb::Slice const&amp;) (8 samples, 3.51%)</title><rect x="351.6" y="595.0" width="41.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="354.6" y="606.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (8 samples, 3.51%)</title><rect x="351.6" y="579.0" width="41.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="354.6" y="590.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni17197499110732040112.so (1 samples, 0.44%)</title><rect x="351.6" y="563.0" width="5.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="354.6" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 2.19%)</title><rect x="356.8" y="563.0" width="25.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="359.8" y="574.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni17197499110732040112.so (2 samples, 0.88%)</title><rect x="367.1" y="547.0" width="10.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="370.1" y="558.0"></text>
</g>
<g>
<title>hv_stimer0_callback_vector (1 samples, 0.44%)</title><rect x="367.1" y="531.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="370.1" y="542.0"></text>
</g>
<g>
<title>hv_stimer0_vector_handler (1 samples, 0.44%)</title><rect x="367.1" y="515.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="370.1" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.44%)</title><rect x="367.1" y="499.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="370.1" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.44%)</title><rect x="367.1" y="483.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.1" y="494.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.44%)</title><rect x="367.1" y="467.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.1" y="478.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.44%)</title><rect x="367.1" y="451.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="370.1" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.44%)</title><rect x="367.1" y="435.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="370.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.44%)</title><rect x="372.3" y="531.0" width="5.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="375.3" y="542.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.44%)</title><rect x="372.3" y="515.0" width="5.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="375.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.44%)</title><rect x="377.5" y="547.0" width="5.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="380.5" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.44%)</title><rect x="377.5" y="531.0" width="5.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="380.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.88%)</title><rect x="382.6" y="563.0" width="10.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="385.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.44%)</title><rect x="393.0" y="627.0" width="5.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="396.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.44%)</title><rect x="398.2" y="643.0" width="5.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="401.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Delete(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;) (2 samples, 0.88%)</title><rect x="403.3" y="659.0" width="10.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="406.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.44%)</title><rect x="403.3" y="643.0" width="5.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="406.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Delete(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;) (1 samples, 0.44%)</title><rect x="408.5" y="643.0" width="5.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="411.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 7.46%)</title><rect x="413.7" y="739.0" width="88.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="416.7" y="750.0">[unknown]</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libc-2.27.so (1 samples, 0.44%)</title><rect x="413.7" y="723.0" width="5.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="416.7" y="734.0"></text>
</g>
<g>
<title>__write (15 samples, 6.58%)</title><rect x="418.9" y="723.0" width="77.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="421.9" y="734.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 6.58%)</title><rect x="418.9" y="707.0" width="77.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="421.9" y="718.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (15 samples, 6.58%)</title><rect x="418.9" y="691.0" width="77.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="421.9" y="702.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_write (15 samples, 6.58%)</title><rect x="418.9" y="675.0" width="77.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="421.9" y="686.0">__x64_sys..</text>
</g>
<g>
<title>ksys_write (15 samples, 6.58%)</title><rect x="418.9" y="659.0" width="77.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="421.9" y="670.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.44%)</title><rect x="418.9" y="643.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="421.9" y="654.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.44%)</title><rect x="424.0" y="643.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="427.0" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.44%)</title><rect x="429.2" y="643.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.2" y="654.0"></text>
</g>
<g>
<title>vfs_write (12 samples, 5.26%)</title><rect x="434.4" y="643.0" width="62.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.4" y="654.0">vfs_wr..</text>
</g>
<g>
<title>__vfs_write (11 samples, 4.82%)</title><rect x="439.6" y="627.0" width="56.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="442.6" y="638.0">__vfs_..</text>
</g>
<g>
<title>new_sync_write (11 samples, 4.82%)</title><rect x="439.6" y="611.0" width="56.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="442.6" y="622.0">new_sy..</text>
</g>
<g>
<title>ext4_file_write_iter (11 samples, 4.82%)</title><rect x="439.6" y="595.0" width="56.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="442.6" y="606.0">ext4_f..</text>
</g>
<g>
<title>__generic_file_write_iter (11 samples, 4.82%)</title><rect x="439.6" y="579.0" width="56.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="442.6" y="590.0">__gene..</text>
</g>
<g>
<title>file_update_time (2 samples, 0.88%)</title><rect x="439.6" y="563.0" width="10.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="442.6" y="574.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.88%)</title><rect x="439.6" y="547.0" width="10.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="442.6" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.88%)</title><rect x="439.6" y="531.0" width="10.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="442.6" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.88%)</title><rect x="439.6" y="515.0" width="10.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="442.6" y="526.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.88%)</title><rect x="439.6" y="499.0" width="10.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="442.6" y="510.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.88%)</title><rect x="439.6" y="483.0" width="10.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="442.6" y="494.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.88%)</title><rect x="439.6" y="467.0" width="10.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="442.6" y="478.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.44%)</title><rect x="439.6" y="451.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="442.6" y="462.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.44%)</title><rect x="439.6" y="435.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.6" y="446.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.44%)</title><rect x="439.6" y="419.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="442.6" y="430.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.44%)</title><rect x="444.7" y="451.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="447.7" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (8 samples, 3.51%)</title><rect x="449.9" y="563.0" width="41.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="452.9" y="574.0">gen..</text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 1.32%)</title><rect x="449.9" y="547.0" width="15.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="452.9" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.88%)</title><rect x="449.9" y="531.0" width="10.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="452.9" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.88%)</title><rect x="449.9" y="515.0" width="10.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="452.9" y="526.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.44%)</title><rect x="449.9" y="499.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="452.9" y="510.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.44%)</title><rect x="455.1" y="499.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="458.1" y="510.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.44%)</title><rect x="460.3" y="531.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="463.3" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_end (4 samples, 1.75%)</title><rect x="465.4" y="547.0" width="20.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="468.4" y="558.0"></text>
</g>
<g>
<title>generic_write_end (4 samples, 1.75%)</title><rect x="465.4" y="531.0" width="20.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="468.4" y="542.0"></text>
</g>
<g>
<title>__generic_write_end (4 samples, 1.75%)</title><rect x="465.4" y="515.0" width="20.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="468.4" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 1.75%)</title><rect x="465.4" y="499.0" width="20.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="468.4" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 1.75%)</title><rect x="465.4" y="483.0" width="20.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="468.4" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 1.75%)</title><rect x="465.4" y="467.0" width="20.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.4" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.44%)</title><rect x="465.4" y="451.0" width="5.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="468.4" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.88%)</title><rect x="470.6" y="451.0" width="10.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="473.6" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.88%)</title><rect x="470.6" y="435.0" width="10.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="473.6" y="446.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.44%)</title><rect x="475.8" y="419.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="478.8" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.44%)</title><rect x="481.0" y="451.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="484.0" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.44%)</title><rect x="481.0" y="435.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="484.0" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.44%)</title><rect x="481.0" y="419.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="484.0" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.44%)</title><rect x="481.0" y="403.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="484.0" y="414.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.44%)</title><rect x="486.1" y="547.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="489.1" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.44%)</title><rect x="491.3" y="563.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="494.3" y="574.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.44%)</title><rect x="496.5" y="723.0" width="5.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="499.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.handlePut (1 samples, 0.44%)</title><rect x="501.7" y="803.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.44%)</title><rect x="501.7" y="787.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.sendResponse (64 samples, 28.07%)</title><rect x="506.8" y="803.0" width="331.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.8" y="814.0">ru/mail/polis/service/CustomServer.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (64 samples, 28.07%)</title><rect x="506.8" y="787.0" width="331.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.8" y="798.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.88%)</title><rect x="506.8" y="771.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.88%)</title><rect x="506.8" y="755.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.88%)</title><rect x="506.8" y="739.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.88%)</title><rect x="506.8" y="723.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.88%)</title><rect x="506.8" y="707.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.8" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.88%)</title><rect x="506.8" y="691.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (61 samples, 26.75%)</title><rect x="517.2" y="771.0" width="315.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.2" y="782.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 26.75%)</title><rect x="517.2" y="755.0" width="315.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.2" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 26.75%)</title><rect x="517.2" y="739.0" width="315.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.2" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (61 samples, 26.75%)</title><rect x="517.2" y="723.0" width="315.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.2" y="734.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (61 samples, 26.75%)</title><rect x="517.2" y="707.0" width="315.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.2" y="718.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.44%)</title><rect x="517.2" y="691.0" width="5.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="520.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.88%)</title><rect x="522.4" y="691.0" width="10.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="525.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.88%)</title><rect x="522.4" y="675.0" width="10.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="525.4" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.44%)</title><rect x="522.4" y="659.0" width="5.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="525.4" y="670.0"></text>
</g>
<g>
<title>__send (1 samples, 0.44%)</title><rect x="527.5" y="659.0" width="5.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="530.5" y="670.0"></text>
</g>
<g>
<title>__send (58 samples, 25.44%)</title><rect x="532.7" y="691.0" width="300.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="535.7" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 24.12%)</title><rect x="548.2" y="675.0" width="284.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="551.2" y="686.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.44%)</title><rect x="548.2" y="659.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="551.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 23.68%)</title><rect x="553.4" y="659.0" width="279.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="556.4" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (53 samples, 23.25%)</title><rect x="558.6" y="643.0" width="274.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="561.6" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (53 samples, 23.25%)</title><rect x="558.6" y="627.0" width="274.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="561.6" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (53 samples, 23.25%)</title><rect x="558.6" y="611.0" width="274.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="561.6" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (52 samples, 22.81%)</title><rect x="558.6" y="595.0" width="269.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="561.6" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (52 samples, 22.81%)</title><rect x="558.6" y="579.0" width="269.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.6" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_push (1 samples, 0.44%)</title><rect x="558.6" y="563.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="561.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (51 samples, 22.37%)</title><rect x="563.8" y="563.0" width="263.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="566.8" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 1.32%)</title><rect x="563.8" y="547.0" width="15.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="566.8" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 1.32%)</title><rect x="563.8" y="531.0" width="15.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="566.8" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.88%)</title><rect x="563.8" y="515.0" width="10.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="566.8" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.44%)</title><rect x="563.8" y="499.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="566.8" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.44%)</title><rect x="568.9" y="499.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.9" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.44%)</title><rect x="574.1" y="515.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="577.1" y="526.0"></text>
</g>
<g>
<title>tcp_push (47 samples, 20.61%)</title><rect x="579.3" y="547.0" width="243.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="582.3" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (47 samples, 20.61%)</title><rect x="579.3" y="531.0" width="243.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="582.3" y="542.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (47 samples, 20.61%)</title><rect x="579.3" y="515.0" width="243.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="582.3" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (45 samples, 19.74%)</title><rect x="579.3" y="499.0" width="232.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="582.3" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.44%)</title><rect x="579.3" y="483.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="582.3" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (44 samples, 19.30%)</title><rect x="584.5" y="483.0" width="227.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="587.5" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (44 samples, 19.30%)</title><rect x="584.5" y="467.0" width="227.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.5" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (43 samples, 18.86%)</title><rect x="584.5" y="451.0" width="222.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="587.5" y="462.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (6 samples, 2.63%)</title><rect x="584.5" y="435.0" width="31.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="587.5" y="446.0">__..</text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.44%)</title><rect x="584.5" y="419.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.5" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.44%)</title><rect x="589.6" y="419.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="592.6" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 1.75%)</title><rect x="594.8" y="419.0" width="20.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="597.8" y="430.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.44%)</title><rect x="594.8" y="403.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="597.8" y="414.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.44%)</title><rect x="594.8" y="387.0" width="5.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="597.8" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (3 samples, 1.32%)</title><rect x="600.0" y="403.0" width="15.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="603.0" y="414.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.44%)</title><rect x="600.0" y="387.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="603.0" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (2 samples, 0.88%)</title><rect x="605.2" y="387.0" width="10.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="608.2" y="398.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (1 samples, 0.44%)</title><rect x="610.4" y="371.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="613.4" y="382.0"></text>
</g>
<g>
<title>ip_output (37 samples, 16.23%)</title><rect x="615.5" y="435.0" width="191.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="618.5" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (36 samples, 15.79%)</title><rect x="615.5" y="419.0" width="186.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="618.5" y="430.0">ip_finish_output</text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.44%)</title><rect x="620.7" y="403.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="623.7" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (34 samples, 14.91%)</title><rect x="625.9" y="403.0" width="175.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="628.9" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (30 samples, 13.16%)</title><rect x="631.1" y="387.0" width="155.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="634.1" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (30 samples, 13.16%)</title><rect x="631.1" y="371.0" width="155.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="634.1" y="382.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (30 samples, 13.16%)</title><rect x="631.1" y="355.0" width="155.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="634.1" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 13.16%)</title><rect x="631.1" y="339.0" width="155.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="634.1" y="350.0">__softirqentry_text_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.44%)</title><rect x="641.4" y="323.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="644.4" y="334.0"></text>
</g>
<g>
<title>net_rx_action (27 samples, 11.84%)</title><rect x="646.6" y="323.0" width="139.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="649.6" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (27 samples, 11.84%)</title><rect x="646.6" y="307.0" width="139.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="649.6" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (26 samples, 11.40%)</title><rect x="651.8" y="291.0" width="134.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="654.8" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (26 samples, 11.40%)</title><rect x="651.8" y="275.0" width="134.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="654.8" y="286.0">__netif_receive_s..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.44%)</title><rect x="651.8" y="259.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="654.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv (25 samples, 10.96%)</title><rect x="656.9" y="259.0" width="129.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="659.9" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (24 samples, 10.53%)</title><rect x="656.9" y="243.0" width="124.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="659.9" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (24 samples, 10.53%)</title><rect x="656.9" y="227.0" width="124.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="659.9" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (24 samples, 10.53%)</title><rect x="656.9" y="211.0" width="124.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="659.9" y="222.0">ip_local_delive..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (24 samples, 10.53%)</title><rect x="656.9" y="195.0" width="124.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="659.9" y="206.0">ip_protocol_del..</text>
</g>
<g>
<title>tcp_v4_rcv (24 samples, 10.53%)</title><rect x="656.9" y="179.0" width="124.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="659.9" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.44%)</title><rect x="667.3" y="163.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="670.3" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (21 samples, 9.21%)</title><rect x="672.5" y="163.0" width="108.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="675.5" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 9.21%)</title><rect x="672.5" y="147.0" width="108.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="675.5" y="158.0">tcp_rcv_estab..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.44%)</title><rect x="672.5" y="131.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="675.5" y="142.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 1.32%)</title><rect x="677.6" y="131.0" width="15.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 1.32%)</title><rect x="677.6" y="115.0" width="15.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.6" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.88%)</title><rect x="677.6" y="99.0" width="10.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="680.6" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.44%)</title><rect x="677.6" y="83.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="680.6" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.44%)</title><rect x="677.6" y="67.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="680.6" y="78.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.44%)</title><rect x="682.8" y="83.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="685.8" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.44%)</title><rect x="682.8" y="67.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="685.8" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.44%)</title><rect x="682.8" y="51.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="685.8" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.44%)</title><rect x="682.8" y="35.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="685.8" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.44%)</title><rect x="688.0" y="99.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="691.0" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (17 samples, 7.46%)</title><rect x="693.2" y="131.0" width="87.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="696.2" y="142.0">tcp_data_q..</text>
</g>
<g>
<title>sock_def_readable (16 samples, 7.02%)</title><rect x="698.3" y="115.0" width="82.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="701.3" y="126.0">sock_def_..</text>
</g>
<g>
<title>__wake_up_sync_key (16 samples, 7.02%)</title><rect x="698.3" y="99.0" width="82.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="701.3" y="110.0">__wake_up..</text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 7.02%)</title><rect x="698.3" y="83.0" width="82.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="701.3" y="94.0">__wake_up..</text>
</g>
<g>
<title>__lock_text_start (16 samples, 7.02%)</title><rect x="698.3" y="67.0" width="82.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="701.3" y="78.0">__lock_te..</text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.44%)</title><rect x="781.1" y="243.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="784.1" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 1.32%)</title><rect x="786.3" y="387.0" width="15.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="789.3" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 1.32%)</title><rect x="786.3" y="371.0" width="15.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="789.3" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.88%)</title><rect x="791.5" y="355.0" width="10.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="794.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.44%)</title><rect x="791.5" y="339.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="794.5" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.44%)</title><rect x="791.5" y="323.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="794.5" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.44%)</title><rect x="791.5" y="307.0" width="5.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="794.5" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.44%)</title><rect x="791.5" y="291.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="794.5" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.44%)</title><rect x="796.7" y="339.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="799.7" y="350.0"></text>
</g>
<g>
<title>ipv4_helper	[nf_conntrack] (1 samples, 0.44%)</title><rect x="801.8" y="419.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="804.8" y="430.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.44%)</title><rect x="807.0" y="451.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="810.0" y="462.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.88%)</title><rect x="812.2" y="499.0" width="10.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="815.2" y="510.0"></text>
</g>
<g>
<title>read_hv_clock_tsc (2 samples, 0.88%)</title><rect x="812.2" y="483.0" width="10.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="815.2" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.44%)</title><rect x="822.5" y="547.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="825.5" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.44%)</title><rect x="822.5" y="531.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="825.5" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.44%)</title><rect x="827.7" y="595.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="830.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.44%)</title><rect x="832.9" y="771.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.44%)</title><rect x="832.9" y="755.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.44%)</title><rect x="832.9" y="739.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.44%)</title><rect x="832.9" y="723.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.9" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (68 samples, 29.82%)</title><rect x="838.1" y="899.0" width="351.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.1" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 9.21%)</title><rect x="848.4" y="883.0" width="108.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.4" y="894.0">one/nio/net/N..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (21 samples, 9.21%)</title><rect x="848.4" y="867.0" width="108.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.4" y="878.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.44%)</title><rect x="848.4" y="851.0" width="5.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="851.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 7.89%)</title><rect x="853.6" y="851.0" width="93.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="856.6" y="862.0">[unknown]</text>
</g>
<g>
<title>epoll_wait (18 samples, 7.89%)</title><rect x="853.6" y="835.0" width="93.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="856.6" y="846.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 6.14%)</title><rect x="874.3" y="819.0" width="72.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="877.3" y="830.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (14 samples, 6.14%)</title><rect x="874.3" y="803.0" width="72.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="877.3" y="814.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (13 samples, 5.70%)</title><rect x="879.5" y="787.0" width="67.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="882.5" y="798.0">__x64_s..</text>
</g>
<g>
<title>do_epoll_wait (13 samples, 5.70%)</title><rect x="879.5" y="771.0" width="67.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="882.5" y="782.0">do_epol..</text>
</g>
<g>
<title>ep_poll (12 samples, 5.26%)</title><rect x="879.5" y="755.0" width="62.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="882.5" y="766.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (3 samples, 1.32%)</title><rect x="879.5" y="739.0" width="15.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="882.5" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.88%)</title><rect x="884.6" y="723.0" width="10.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="887.6" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.44%)</title><rect x="889.8" y="707.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="892.8" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.44%)</title><rect x="889.8" y="691.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="892.8" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 3.95%)</title><rect x="895.0" y="739.0" width="46.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="898.0" y="750.0">sche..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (9 samples, 3.95%)</title><rect x="895.0" y="723.0" width="46.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="898.0" y="734.0">sche..</text>
</g>
<g>
<title>schedule (9 samples, 3.95%)</title><rect x="895.0" y="707.0" width="46.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="898.0" y="718.0">sche..</text>
</g>
<g>
<title>__schedule (9 samples, 3.95%)</title><rect x="895.0" y="691.0" width="46.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="898.0" y="702.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (8 samples, 3.51%)</title><rect x="900.2" y="675.0" width="41.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="903.2" y="686.0">fin..</text>
</g>
<g>
<title>fput (1 samples, 0.44%)</title><rect x="941.6" y="755.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="944.6" y="766.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.44%)</title><rect x="946.8" y="851.0" width="5.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="949.8" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.44%)</title><rect x="946.8" y="835.0" width="5.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="949.8" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.44%)</title><rect x="951.9" y="851.0" width="5.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="954.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (45 samples, 19.74%)</title><rect x="957.1" y="883.0" width="232.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.1" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (42 samples, 18.42%)</title><rect x="957.1" y="867.0" width="217.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.1" y="878.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (20 samples, 8.77%)</title><rect x="957.1" y="851.0" width="103.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.1" y="862.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (17 samples, 7.46%)</title><rect x="957.1" y="835.0" width="88.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.1" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (17 samples, 7.46%)</title><rect x="957.1" y="819.0" width="88.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="960.1" y="830.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (17 samples, 7.46%)</title><rect x="957.1" y="803.0" width="88.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="960.1" y="814.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.44%)</title><rect x="957.1" y="787.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="960.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.44%)</title><rect x="957.1" y="771.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.44%)</title><rect x="957.1" y="755.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.44%)</title><rect x="957.1" y="739.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.44%)</title><rect x="957.1" y="723.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/CustomServer.entity (16 samples, 7.02%)</title><rect x="962.3" y="787.0" width="82.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.3" y="798.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (16 samples, 7.02%)</title><rect x="962.3" y="771.0" width="82.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="965.3" y="782.0">one/nio/s..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 7.02%)</title><rect x="962.3" y="755.0" width="82.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.3" y="766.0">java/util..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (16 samples, 7.02%)</title><rect x="962.3" y="739.0" width="82.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="965.3" y="750.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (16 samples, 7.02%)</title><rect x="962.3" y="723.0" width="82.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.3" y="734.0">one/nio/s..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (16 samples, 7.02%)</title><rect x="962.3" y="707.0" width="82.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.3" y="718.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (16 samples, 7.02%)</title><rect x="962.3" y="691.0" width="82.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.3" y="702.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (16 samples, 7.02%)</title><rect x="962.3" y="675.0" width="82.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.3" y="686.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 7.02%)</title><rect x="962.3" y="659.0" width="82.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.3" y="670.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 7.02%)</title><rect x="962.3" y="643.0" width="82.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.3" y="654.0">jdk/inter..</text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.88%)</title><rect x="962.3" y="627.0" width="10.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="965.3" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.44%)</title><rect x="962.3" y="611.0" width="5.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="965.3" y="622.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.44%)</title><rect x="967.5" y="611.0" width="5.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="970.5" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (14 samples, 6.14%)</title><rect x="972.6" y="627.0" width="72.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="975.6" y="638.0">pthread_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 6.14%)</title><rect x="972.6" y="611.0" width="72.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="975.6" y="622.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (14 samples, 6.14%)</title><rect x="972.6" y="595.0" width="72.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="975.6" y="606.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 6.14%)</title><rect x="972.6" y="579.0" width="72.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="975.6" y="590.0">__x64_sy..</text>
</g>
<g>
<title>do_futex (14 samples, 6.14%)</title><rect x="972.6" y="563.0" width="72.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="975.6" y="574.0">do_futex</text>
</g>
<g>
<title>futex_wake (13 samples, 5.70%)</title><rect x="977.8" y="547.0" width="67.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="980.8" y="558.0">futex_w..</text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.44%)</title><rect x="988.2" y="531.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="991.2" y="542.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 4.39%)</title><rect x="993.3" y="531.0" width="51.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="996.3" y="542.0">wake_..</text>
</g>
<g>
<title>try_to_wake_up (10 samples, 4.39%)</title><rect x="993.3" y="515.0" width="51.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="996.3" y="526.0">try_t..</text>
</g>
<g>
<title>__lock_text_start (10 samples, 4.39%)</title><rect x="993.3" y="499.0" width="51.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="996.3" y="510.0">__loc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 1.32%)</title><rect x="1045.1" y="835.0" width="15.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1048.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.44%)</title><rect x="1045.1" y="819.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.88%)</title><rect x="1050.3" y="819.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.88%)</title><rect x="1050.3" y="803.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (22 samples, 9.65%)</title><rect x="1060.6" y="851.0" width="113.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.6" y="862.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (22 samples, 9.65%)</title><rect x="1060.6" y="835.0" width="113.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1063.6" y="846.0">one/nio/net/Na..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.44%)</title><rect x="1071.0" y="819.0" width="5.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1074.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.44%)</title><rect x="1071.0" y="803.0" width="5.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1074.0" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.44%)</title><rect x="1071.0" y="787.0" width="5.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1074.0" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.44%)</title><rect x="1071.0" y="771.0" width="5.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1074.0" y="782.0"></text>
</g>
<g>
<title>recv (19 samples, 8.33%)</title><rect x="1076.1" y="819.0" width="98.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1079.1" y="830.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 5.70%)</title><rect x="1107.2" y="803.0" width="67.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1110.2" y="814.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (13 samples, 5.70%)</title><rect x="1107.2" y="787.0" width="67.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1110.2" y="798.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_recvfrom (12 samples, 5.26%)</title><rect x="1112.4" y="771.0" width="62.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1115.4" y="782.0">__x64_..</text>
</g>
<g>
<title>__sys_recvfrom (12 samples, 5.26%)</title><rect x="1112.4" y="755.0" width="62.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1115.4" y="766.0">__sys_..</text>
</g>
<g>
<title>sock_recvmsg (11 samples, 4.82%)</title><rect x="1112.4" y="739.0" width="56.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1115.4" y="750.0">sock_r..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.44%)</title><rect x="1112.4" y="723.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1115.4" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (9 samples, 3.95%)</title><rect x="1117.5" y="723.0" width="46.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1120.5" y="734.0">inet..</text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 3.95%)</title><rect x="1117.5" y="707.0" width="46.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1120.5" y="718.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 1.32%)</title><rect x="1122.7" y="691.0" width="15.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1125.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.88%)</title><rect x="1122.7" y="675.0" width="10.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1125.7" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.88%)</title><rect x="1122.7" y="659.0" width="10.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1125.7" y="670.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.88%)</title><rect x="1122.7" y="643.0" width="10.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1125.7" y="654.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.44%)</title><rect x="1133.1" y="675.0" width="5.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1136.1" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 1.75%)</title><rect x="1138.2" y="691.0" width="20.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1141.2" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 1.75%)</title><rect x="1138.2" y="675.0" width="20.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1141.2" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 1.32%)</title><rect x="1143.4" y="659.0" width="15.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1146.4" y="670.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.44%)</title><rect x="1143.4" y="643.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1146.4" y="654.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.44%)</title><rect x="1143.4" y="627.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1146.4" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.44%)</title><rect x="1148.6" y="643.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1151.6" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.44%)</title><rect x="1148.6" y="627.0" width="5.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1151.6" y="638.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.44%)</title><rect x="1153.8" y="643.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1156.8" y="654.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.44%)</title><rect x="1158.9" y="691.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1161.9" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.44%)</title><rect x="1164.1" y="723.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1167.1" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.44%)</title><rect x="1164.1" y="707.0" width="5.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1167.1" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.44%)</title><rect x="1164.1" y="691.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1167.1" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.44%)</title><rect x="1169.3" y="739.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1172.3" y="750.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.44%)</title><rect x="1169.3" y="723.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1172.3" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.44%)</title><rect x="1169.3" y="707.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1172.3" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 1.32%)</title><rect x="1174.5" y="867.0" width="15.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.5" y="878.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.88%)</title><rect x="1179.6" y="851.0" width="10.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1182.6" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.44%)</title><rect x="1184.8" y="835.0" width="5.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1187.8" y="846.0"></text>
</g>
</g>
</svg>
